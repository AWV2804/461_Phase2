[
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5191",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5191/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5191/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5191/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5191",
    "id": 2533109031,
    "node_id": "I_kwDOAAiDnM6W_C0n",
    "number": 5191,
    "title": " Possibly incorrect code in the documentation",
    "user": {
      "login": "citizenofgreatsiberia",
      "id": 76240257,
      "node_id": "MDQ6VXNlcjc2MjQwMjU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/76240257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/citizenofgreatsiberia",
      "html_url": "https://github.com/citizenofgreatsiberia",
      "followers_url": "https://api.github.com/users/citizenofgreatsiberia/followers",
      "following_url": "https://api.github.com/users/citizenofgreatsiberia/following{/other_user}",
      "gists_url": "https://api.github.com/users/citizenofgreatsiberia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/citizenofgreatsiberia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/citizenofgreatsiberia/subscriptions",
      "organizations_url": "https://api.github.com/users/citizenofgreatsiberia/orgs",
      "repos_url": "https://api.github.com/users/citizenofgreatsiberia/repos",
      "events_url": "https://api.github.com/users/citizenofgreatsiberia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/citizenofgreatsiberia/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2111669362,
        "node_id": "MDU6TGFiZWwyMTExNjY5MzYy",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/question",
        "name": "question",
        "color": "d876e3",
        "default": true,
        "description": "Further information is requested"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2024-09-18T08:48:05Z",
    "updated_at": "2024-09-19T06:10:20Z",
    "closed_at": "2024-09-19T06:10:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Description of the problem:**\r\nIn the Socket.IO documentation for step 7, `await` is used outside of an asynchronous function, which causes an error.\r\n\r\n**Link to the documentation:**\r\n[Socket.IO Tutorial - Step 7](https://socket.io/docs/v4/tutorial/step-7)\r\n\r\n**Code example:**\r\n```javascript\r\nconst db = await open({\r\n    filename: 'chat.db',\r\n    driver: sqlite3.Database\r\n});\r\n```\r\n**Suggestion for correction:**\r\nWrap the code in an asynchronous function:\r\n```javascript\r\nasync function initializeDatabase() {\r\n    const db = await open({\r\n        filename: 'chat.db',\r\n        driver: sqlite3.Database\r\n    });\r\n    // remaining code\r\n}\r\n```",
    "closed_by": {
      "login": "darrachequesne",
      "id": 13031701,
      "node_id": "MDQ6VXNlcjEzMDMxNzAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13031701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darrachequesne",
      "html_url": "https://github.com/darrachequesne",
      "followers_url": "https://api.github.com/users/darrachequesne/followers",
      "following_url": "https://api.github.com/users/darrachequesne/following{/other_user}",
      "gists_url": "https://api.github.com/users/darrachequesne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darrachequesne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darrachequesne/subscriptions",
      "organizations_url": "https://api.github.com/users/darrachequesne/orgs",
      "repos_url": "https://api.github.com/users/darrachequesne/repos",
      "events_url": "https://api.github.com/users/darrachequesne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darrachequesne/received_events",
      "type": "User",
      "site_admin": false
    },
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5191/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5191/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5188",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5188/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5188/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5188/events",
    "html_url": "https://github.com/socketio/socket.io/pull/5188",
    "id": 2522512681,
    "node_id": "PR_kwDOAAiDnM57T3b0",
    "number": 5188,
    "title": "refactor: default transport in type",
    "user": {
      "login": "nayounsang",
      "id": 77400131,
      "node_id": "MDQ6VXNlcjc3NDAwMTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/77400131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nayounsang",
      "html_url": "https://github.com/nayounsang",
      "followers_url": "https://api.github.com/users/nayounsang/followers",
      "following_url": "https://api.github.com/users/nayounsang/following{/other_user}",
      "gists_url": "https://api.github.com/users/nayounsang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nayounsang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nayounsang/subscriptions",
      "organizations_url": "https://api.github.com/users/nayounsang/orgs",
      "repos_url": "https://api.github.com/users/nayounsang/repos",
      "events_url": "https://api.github.com/users/nayounsang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nayounsang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-09-12T14:08:18Z",
    "updated_at": "2024-09-14T06:17:45Z",
    "closed_at": "2024-09-14T06:17:36Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/socketio/socket.io/pulls/5188",
      "html_url": "https://github.com/socketio/socket.io/pull/5188",
      "diff_url": "https://github.com/socketio/socket.io/pull/5188.diff",
      "patch_url": "https://github.com/socketio/socket.io/pull/5188.patch",
      "merged_at": "2024-09-14T06:17:36Z"
    },
    "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\nah! I tried to specify transports, but it doesn't autocomplete.\r\nBecause current type of transport is string[].\r\nI have to check JSDOC to see  ['polling','websocket', 'webtransport'].\r\n\r\n### New behavior\r\nBe comfortable with auto-completion without typos.\r\n\r\n### Other information (e.g. related issues)\r\n#5187 \r\n\r\n",
    "closed_by": {
      "login": "darrachequesne",
      "id": 13031701,
      "node_id": "MDQ6VXNlcjEzMDMxNzAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13031701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darrachequesne",
      "html_url": "https://github.com/darrachequesne",
      "followers_url": "https://api.github.com/users/darrachequesne/followers",
      "following_url": "https://api.github.com/users/darrachequesne/following{/other_user}",
      "gists_url": "https://api.github.com/users/darrachequesne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darrachequesne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darrachequesne/subscriptions",
      "organizations_url": "https://api.github.com/users/darrachequesne/orgs",
      "repos_url": "https://api.github.com/users/darrachequesne/repos",
      "events_url": "https://api.github.com/users/darrachequesne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darrachequesne/received_events",
      "type": "User",
      "site_admin": false
    },
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5188/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5188/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5187",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5187/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5187/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5187/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5187",
    "id": 2522487547,
    "node_id": "I_kwDOAAiDnM6WWhr7",
    "number": 5187,
    "title": "Specify transport type or autocompletion.",
    "user": {
      "login": "nayounsang",
      "id": 77400131,
      "node_id": "MDQ6VXNlcjc3NDAwMTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/77400131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nayounsang",
      "html_url": "https://github.com/nayounsang",
      "followers_url": "https://api.github.com/users/nayounsang/followers",
      "following_url": "https://api.github.com/users/nayounsang/following{/other_user}",
      "gists_url": "https://api.github.com/users/nayounsang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nayounsang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nayounsang/subscriptions",
      "organizations_url": "https://api.github.com/users/nayounsang/orgs",
      "repos_url": "https://api.github.com/users/nayounsang/repos",
      "events_url": "https://api.github.com/users/nayounsang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nayounsang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 124367,
        "node_id": "MDU6TGFiZWwxMjQzNjc=",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/enhancement",
        "name": "enhancement",
        "color": "a2eeef",
        "default": true,
        "description": "New feature or request"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/socketio/socket.io/milestones/54",
      "html_url": "https://github.com/socketio/socket.io/milestone/54",
      "labels_url": "https://api.github.com/repos/socketio/socket.io/milestones/54/labels",
      "id": 11597640,
      "node_id": "MI_kwDOAAiDnM4AsPdI",
      "number": 54,
      "title": "socket.io-client@next",
      "description": "",
      "creator": {
        "login": "darrachequesne",
        "id": 13031701,
        "node_id": "MDQ6VXNlcjEzMDMxNzAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/13031701?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darrachequesne",
        "html_url": "https://github.com/darrachequesne",
        "followers_url": "https://api.github.com/users/darrachequesne/followers",
        "following_url": "https://api.github.com/users/darrachequesne/following{/other_user}",
        "gists_url": "https://api.github.com/users/darrachequesne/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/darrachequesne/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/darrachequesne/subscriptions",
        "organizations_url": "https://api.github.com/users/darrachequesne/orgs",
        "repos_url": "https://api.github.com/users/darrachequesne/repos",
        "events_url": "https://api.github.com/users/darrachequesne/events{/privacy}",
        "received_events_url": "https://api.github.com/users/darrachequesne/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 10,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2024-09-18T05:58:27Z",
      "updated_at": "2024-09-20T09:19:28Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 0,
    "created_at": "2024-09-12T13:59:03Z",
    "updated_at": "2024-09-18T10:28:01Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\n```\r\nimport { io } from \"socket.io-client\";\r\n    const newSocket = io(process.env.HELLO, {\r\n      withCredentials: true,\r\n      transports: [], // something...\r\n    });\r\n```\r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen.\r\nI was able to specify specific transports.\r\nI think it would be more convenient if it was auto-completed.\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\nA different type instead of string[]\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5187/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5187/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5182",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5182/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5182/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5182/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5182",
    "id": 2511653882,
    "node_id": "I_kwDOAAiDnM6VtMv6",
    "number": 5182,
    "title": "Express Middleware Errors Do Not Stop Socket.IO Reconnections",
    "user": {
      "login": "Nightmeru",
      "id": 67314979,
      "node_id": "MDQ6VXNlcjY3MzE0OTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/67314979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nightmeru",
      "html_url": "https://github.com/Nightmeru",
      "followers_url": "https://api.github.com/users/Nightmeru/followers",
      "following_url": "https://api.github.com/users/Nightmeru/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nightmeru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nightmeru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nightmeru/subscriptions",
      "organizations_url": "https://api.github.com/users/Nightmeru/orgs",
      "repos_url": "https://api.github.com/users/Nightmeru/repos",
      "events_url": "https://api.github.com/users/Nightmeru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nightmeru/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206558,
        "node_id": "MDU6TGFiZWwyMDY1NTg=",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/documentation",
        "name": "documentation",
        "color": "DDDDDD",
        "default": true,
        "description": "Improvements or additions to documentation"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-09-07T13:44:10Z",
    "updated_at": "2024-09-19T06:41:01Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nThe documentation states that middleware errors should stop the client from reconnecting. However, this does not seem to be the case for middleware created using io.engine.use.\r\n\r\n**To Reproduce**\r\n\r\nSocket.IO server version: `4.7.5`\r\nSocket.IO client version: `4.7.5`\r\n\r\n*Server*\r\n\r\nFor example, let's create two middlewares that will trigger errors:\r\n\r\nFirst:\r\n```js\r\nio.use((socket, next) => {\r\n  next(new Error('thou shall not pass and stop'))\r\n})\r\n```\r\nSecond:\r\n```js\r\nio.engine.use((req, res, next) => {\r\n  next(new Error('thou shall not pass'))\r\n})\r\n```\r\n\r\n*Client*\r\n\r\nLog the response as follows:\r\n\r\n```js\r\nsocket.on('connect_error', (err) => {\r\n  console.log('websocket error:', err.message, socket.active)\r\n})\r\n```\r\n\r\nUsing the first middleware, the response is:\r\n```\r\nwebsocket error: thou shall not pass and stop false\r\n```\r\nUsing the second middleware, however, the response is:\r\n```\r\nwebsocket error: xhr poll error true\r\nwebsocket error: xhr poll error true\r\nwebsocket error: xhr poll error true\r\n...\r\n```\r\n\r\n**Expected behavior**\r\nI'm not sure if I missed something, but I believe that this type of middleware should, in fact, stop reconnections!\r\n\r\n**Platform:**\r\n - Device: PC\r\n - OS: Windows 10\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5182/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5182/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5179",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5179/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5179/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5179/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5179",
    "id": 2497609517,
    "node_id": "I_kwDOAAiDnM6U3n8t",
    "number": 5179,
    "title": "Namespaces are contravariant over SocketData because `Namespace['_fns']` is not `private`",
    "user": {
      "login": "ammut",
      "id": 18117535,
      "node_id": "MDQ6VXNlcjE4MTE3NTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/18117535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ammut",
      "html_url": "https://github.com/ammut",
      "followers_url": "https://api.github.com/users/ammut/followers",
      "following_url": "https://api.github.com/users/ammut/following{/other_user}",
      "gists_url": "https://api.github.com/users/ammut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ammut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ammut/subscriptions",
      "organizations_url": "https://api.github.com/users/ammut/orgs",
      "repos_url": "https://api.github.com/users/ammut/repos",
      "events_url": "https://api.github.com/users/ammut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ammut/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 124367,
        "node_id": "MDU6TGFiZWwxMjQzNjc=",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/enhancement",
        "name": "enhancement",
        "color": "a2eeef",
        "default": true,
        "description": "New feature or request"
      },
      {
        "id": 7181893443,
        "node_id": "LA_kwDOAAiDnM8AAAABrBL_Qw",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/package:socket.io",
        "name": "package:socket.io",
        "color": "C9CE8F",
        "default": false,
        "description": "This concerns the \"socket.io\" package"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-08-30T15:50:39Z",
    "updated_at": "2024-09-16T07:51:55Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\n\r\nI have a package that exports a function requiring a typed Namespace to do its thing. This Namespace has a `SocketData` value of `{ connectionId: string }`. In my actual application I then set up such a namespace to provide said setup function with a such a namespace.\r\n\r\nHowever, because the actual namespace I set up has additional properties in `SocketData`, for other parts of the application. This results in a TypeScript compiler error when trying to apply said actual namespace to that setup function.\r\n\r\nThe error stems from the fact that the `_fns` property on `Namespace` is [contravariant](https://devblogs.microsoft.com/typescript/announcing-typescript-4-7/#optional-variance-annotations-for-type-parameters) over `SocketData`.\r\n\r\n**To Reproduce**\r\n\r\n*Server*\r\n\r\n```ts\r\nimport type { Namespace } from \"socket.io\";\r\nimport { Server } from \"socket.io\";\r\n\r\nconst io = new Server(3000, {});\r\nconst ns = io.of('/my-ns') as Namespace<any, any, any, { connectionId: string; otherStuff: string }>;\r\n\r\nconst nsForMyPackage: Namespace<any, any, any, { connectionId: string }> = ns; // <- THIS ERRORS\r\n\r\n```\r\n\r\n**Additional context**\r\n\r\n*In theory*, because `_fns` is not marked `private`, I can do something like this:\r\n\r\n```ts\r\ndeclare const nsA: Namespace<any, any, any, { foo: string; bar: string }>;\r\n\r\nnsA.use((socket, next) => {\r\n  console.log(socket.data.bar.toUpperCase());\r\n  next();\r\n});\r\n\r\nconst nsB: Namespace<any, any, any, { foo: string }> = nsA; // BAD ASSIGNMENT\r\n\r\nconst nsC: Namespace<any, any, any, { foo: string }>;\r\n\r\nnsC.on('connection', (socketC) => {\r\n  nsB._fns[0](socketC, () => {}); // BAD CALL\r\n});\r\n```\r\n\r\nTo the TypeScript compiler, `BAD CALL` looks fine. `nsB._fns` contains functions that require a Socket with `SocketData` of `{ foo: string }`. `nsC.on('connection', ...)` provides just such a Socket. However, that middleware will try to call `socket.data.bar.toUpperCase()` and produce a `TypeError: bar is undefined`. That is why the compiler warns me at `BAD ASSIGNMENT`.\r\n\r\nHOWEVER, I should never actually know anything about `_fns`, even less access it. That would make it impossible to do any such mischief. Then the assignment at `BAD ASSIGNMENT` would be safe. As even in that case, code like this would be sound:\r\n\r\n```ts\r\n\r\ndeclare const nsA: Namespace<any, any, any, { foo: string; bar: string }>;\r\nnsA.use((socket, next) => {\r\n  // setup socket data\r\n  socket.data.foo = 'foo';\r\n  socket.data.bar = 'bar';\r\n});\r\n\r\nconst nsB: Namespace<any, any, any, { foo: string }> = nsA; // This would be a valid assignment if `_fns` was `private`\r\n\r\nnsB.on('connection', (socket) => {\r\n  console.log(socket.data.foo);\r\n  console.log(socket.data.bar); // This would be a type error, but still work at runtime\r\n});\r\n```\r\n\r\nI took a quick glance at the Namespace source and it looks like you're keeping it public (with a `/** @private */` JSDoc comment) because you need to access it in `ParentNamespace.createChild`. Two suggestions to deal with that after making `_fns` private:\r\n\r\n1. Use `namespace['_fns'] = this._fns.slice()` in `createChild`\r\n2. Provide a `protected static setFns(ns: Namespace, fns: Array<...>) { ns._fns = fns; }` in `Namespace`. This would have the added benefit of working even with JS private fields (`#_fns`), and because it's `protected` will only be accessible to `Namespace` or it's subclasses.\r\n\r\nLet me know if one of those options sounds good to you and you want me to make a PR.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5179/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5174",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5174/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5174/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5174/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5174",
    "id": 2470226947,
    "node_id": "I_kwDOAAiDnM6TPKwD",
    "number": 5174,
    "title": "socket connection not triggered on first page visit using nextjs app router",
    "user": {
      "login": "younes101020",
      "id": 90276252,
      "node_id": "MDQ6VXNlcjkwMjc2MjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/90276252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/younes101020",
      "html_url": "https://github.com/younes101020",
      "followers_url": "https://api.github.com/users/younes101020/followers",
      "following_url": "https://api.github.com/users/younes101020/following{/other_user}",
      "gists_url": "https://api.github.com/users/younes101020/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/younes101020/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/younes101020/subscriptions",
      "organizations_url": "https://api.github.com/users/younes101020/orgs",
      "repos_url": "https://api.github.com/users/younes101020/repos",
      "events_url": "https://api.github.com/users/younes101020/events{/privacy}",
      "received_events_url": "https://api.github.com/users/younes101020/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2986024035,
        "node_id": "MDU6TGFiZWwyOTg2MDI0MDM1",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
        "name": "to triage",
        "color": "FFD700",
        "default": false,
        "description": "Waiting to be triaged by a member of the team"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-08-16T12:57:06Z",
    "updated_at": "2024-08-16T13:50:26Z",
    "closed_at": "2024-08-16T13:50:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n`connected` boolean property of the client socket module return false on first page visit and true on subsequent visits, using nextjs app router after following https://socket.io/fr/how-to/use-with-nextjs\r\n\r\n**To Reproduce**\r\n\r\nPlease fill the following code example:\r\n\r\n1. Go to http://electra.younesfakallah.fr/\r\n2. Logged in with TMDB account\r\n3. Click on `Space` button\r\n\r\nSocket.IO server version: 4.7.5\r\n\r\n*Server*\r\n\r\n```ts\r\n\r\nconst dev = process.env.NODE_ENV !== \"production\";\r\nconst hostname = \"localhost\";\r\nconst port = 3000;\r\n// when using middleware `hostname` and `port` must be provided below\r\nconst app = next({ dev, hostname, port });\r\nconst handler = app.getRequestHandler();\r\n\r\napp.prepare().then(() => {\r\n  const httpServer = createServer(handler);\r\n\r\n  const io = new Server(httpServer);\r\n  const db = new PrismaClient();\r\n\r\n  let users: User[] = [];\r\n\r\n  io.on(\"connection\", (socket) => {\r\n    socket.on(\"newUser\", (data) => {\r\n      console.log(\"from server side newuser event:\", data)\r\n      // Ignore new user subscription when user is Anonymous (initial zustand value for session context)\r\n      if (\r\n        data.name !== \"Anonymous\" &&\r\n        (!users.some((user) => user.name === data.name) || data.socketID)\r\n      ) {\r\n        socket.join(data.space);\r\n        // Update socket when duplicate is found elsewhere just push the new user\r\n        users = users.some((user) => user.name === data.name)\r\n          ? users.map((user) => {\r\n              if (user.name === data.name) {\r\n                return data;\r\n              }\r\n              return user;\r\n            })\r\n          : [...users, data];\r\n        io.to(data.space).emit(\r\n          \"newUserResponse\",\r\n          users.filter((user) => user.space === data.space),\r\n        );\r\n      }\r\n    });\r\n    socket.on(\"message\", async (data) => {\r\n      console.log(\"from server side message event:\", data)\r\n      // When new message is sended persist it into database and broadcast it into the space\r\n      socket.join(data.message.spaceId);\r\n      await db.message.create({\r\n        data: data.insertToDB,\r\n      });\r\n      io.to(data.message.spaceId).emit(\"messageResponse\", data.message);\r\n    });\r\n    socket.on(\"disconnect\", () => {\r\n      // Remove user reference\r\n      users = users.map((user) => {\r\n        if (user.socketID === socket.id) {\r\n          return {\r\n            ...user,\r\n            socketID: false,\r\n          };\r\n        }\r\n        return user;\r\n      });\r\n      io.emit(\"newUserResponse\", users);\r\n      socket.disconnect();\r\n    });\r\n  });\r\n\r\n  httpServer\r\n    .once(\"error\", (err) => {\r\n      console.error(err);\r\n      process.exit(1);\r\n    })\r\n    .listen(port, () => {\r\n      console.log(`> Ready on http://${hostname}:${port}`);\r\n    });\r\n});\r\n\r\n```\r\n\r\nSocket.IO client version: 4.7.5\r\n\r\n*Client*\r\n\r\n```tsx\r\n/**\r\n * This hook manages a socket connection and chat related state\r\n */\r\nconst useSocketConnection = (\r\n  socket: Socket,\r\n  initialMessages: Message[],\r\n  initialUsers: User[],\r\n  space: number,\r\n): UseSocketConnectionReturn => {\r\n  const { id, username, avatar } = useSessionStore((state) => state);\r\n  const [users, setUsers] = useState<User[]>(initialUsers);\r\n  const [spaceState, setSpaceState] = useState(space);\r\n  const [messages, setMessages] = useState<Message[]>(initialMessages);\r\n  const messagesEndRef = useRef<null | HTMLDivElement>(null);\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(scrollToBottom, [messages]);\r\n\r\n  const onConnect = useCallback(() => {\r\n    socket.emit(\"newUser\", {\r\n      name: username,\r\n      socketID: socket.id,\r\n      space,\r\n      id,\r\n    });\r\n  }, [socket, id]);\r\n\r\n  const onDisconnect = useCallback(() => {\r\n    setSpaceState(0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket.connected) {\r\n      onConnect();\r\n    }\r\n\r\n    socket.on(\"disconnect\", onDisconnect);\r\n    socket.on(\"newUserResponse\", (data: User[]) => {\r\n      setUsers((prevUsers) => {\r\n        const userList = prevUsers.map((registeredUser) => {\r\n          if (\r\n            data.some((onlineUser) => onlineUser?.name === registeredUser?.name)\r\n          ) {\r\n            const overrideWithOnlineUser = data.filter(\r\n              (onlineUser) => onlineUser.name === registeredUser?.name,\r\n            );\r\n            return overrideWithOnlineUser[0];\r\n          }\r\n          return registeredUser;\r\n        });\r\n        const overrideDuplicateUserWithOnline = userList.filter(\r\n          (registeredUser) =>\r\n            !data.some(\r\n              (onlineUser) => registeredUser?.name === onlineUser.name,\r\n            ),\r\n        );\r\n        return [...overrideDuplicateUserWithOnline, ...data];\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"disconnect\", onDisconnect);\r\n      socket.off(\"newUserResponse\");\r\n    };\r\n  }, [socket, username, onDisconnect]);\r\n\r\n  useEffect(() => {\r\n    const onMessageResponse = (value: Message) => {\r\n      setMessages((prevMessages) => [...prevMessages, value]);\r\n    };\r\n\r\n    socket.on(\"messageResponse\", onMessageResponse);\r\n\r\n    return () => {\r\n      socket.off(\"messageResponse\", onMessageResponse);\r\n    };\r\n  }, [socket]);\r\n\r\n  const sendMessage = useCallback(\r\n    (message: string) => {\r\n      socket.emit(\"message\", {\r\n        message: {\r\n          content: message,\r\n          spaceId: spaceState,\r\n          user: { name: username, image: avatar.tmdb.avatar_path, id },\r\n        },\r\n        insertToDB: {\r\n          content: message,\r\n          spaceId: spaceState,\r\n          userId: id,\r\n        },\r\n      });\r\n    },\r\n    [socket, id],\r\n  );\r\n\r\n  return {\r\n    users,\r\n    messagesEndRef,\r\n    messages,\r\n    sendMessage,\r\n  };\r\n};\r\n```\r\n\r\n**Expected behavior**\r\ndirectly after connection I'd like to be able to access a `Space` page and have the socket connect correctly, currently only subsequent visits to the `Space` page trigger the socket correctly but the first one doesn't \r\n\r\n**Platform:**\r\n(WSL)\r\nDistributor ID: Ubuntu\r\nDescription: Ubuntu 22.04.3 LTS\r\nRelease: 22.04\r\nCodename: jammy\r\n\r\n**Additional context**\r\nyou can observe the behavior directly from http://electra.younesfakallah.fr or take a look at the source code from github.com/younes101020/electra-v2\r\n\r\nnote: only the first visit to the `Space` page following your connection to the application will trigger the bug, subsequent visits should not cause any socket connection bugs\r\n",
    "closed_by": {
      "login": "younes101020",
      "id": 90276252,
      "node_id": "MDQ6VXNlcjkwMjc2MjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/90276252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/younes101020",
      "html_url": "https://github.com/younes101020",
      "followers_url": "https://api.github.com/users/younes101020/followers",
      "following_url": "https://api.github.com/users/younes101020/following{/other_user}",
      "gists_url": "https://api.github.com/users/younes101020/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/younes101020/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/younes101020/subscriptions",
      "organizations_url": "https://api.github.com/users/younes101020/orgs",
      "repos_url": "https://api.github.com/users/younes101020/repos",
      "events_url": "https://api.github.com/users/younes101020/events{/privacy}",
      "received_events_url": "https://api.github.com/users/younes101020/received_events",
      "type": "User",
      "site_admin": false
    },
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5174/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5174/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5172",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5172/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5172/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5172/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5172",
    "id": 2464500579,
    "node_id": "I_kwDOAAiDnM6S5Utj",
    "number": 5172,
    "title": "net::ERR_NAME_NOT_RESOLVED",
    "user": {
      "login": "MarcGodard",
      "id": 5016637,
      "node_id": "MDQ6VXNlcjUwMTY2Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcGodard",
      "html_url": "https://github.com/MarcGodard",
      "followers_url": "https://api.github.com/users/MarcGodard/followers",
      "following_url": "https://api.github.com/users/MarcGodard/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcGodard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcGodard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcGodard/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcGodard/orgs",
      "repos_url": "https://api.github.com/users/MarcGodard/repos",
      "events_url": "https://api.github.com/users/MarcGodard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcGodard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2833344293,
        "node_id": "MDU6TGFiZWwyODMzMzQ0Mjkz",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/needs%20investigation",
        "name": "needs investigation",
        "color": "B9DDCE",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-08-13T23:54:56Z",
    "updated_at": "2024-09-03T22:41:54Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\nhttps://pagespeed.web.dev/analysis/https-rapiddevgroup-com/uzk899s2pg?form_factor=desktop\r\n\r\nError when using pagespeed insights\r\n\r\n![image](https://github.com/user-attachments/assets/cb396c6c-67ca-46d6-bb0a-685451f5c3a4)\r\n\r\n*Server*\r\n\r\n\"version\": \"4.7.5\",\r\n\r\n*Client*\r\n\r\n\"version\": \"4.7.5\",\r\n\r\n```\r\n    const socket = io(apiSocket, {\r\n      transports: ['websocket'],\r\n      upgrade: true,\r\n      query: { websiteId }\r\n    })\r\n```\r\n\r\n\r\nThis might be a limitation of pagespeed, of a setting I am using above. Considering I didn't see a lot of other people having this issue, it might be my settings, or a bug.",
    "closed_by": {
      "login": "darrachequesne",
      "id": 13031701,
      "node_id": "MDQ6VXNlcjEzMDMxNzAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13031701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darrachequesne",
      "html_url": "https://github.com/darrachequesne",
      "followers_url": "https://api.github.com/users/darrachequesne/followers",
      "following_url": "https://api.github.com/users/darrachequesne/following{/other_user}",
      "gists_url": "https://api.github.com/users/darrachequesne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darrachequesne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darrachequesne/subscriptions",
      "organizations_url": "https://api.github.com/users/darrachequesne/orgs",
      "repos_url": "https://api.github.com/users/darrachequesne/repos",
      "events_url": "https://api.github.com/users/darrachequesne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darrachequesne/received_events",
      "type": "User",
      "site_admin": false
    },
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5172/timeline",
    "performed_via_github_app": null,
    "state_reason": "reopened"
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5177",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5177/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5177/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5177/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5177",
    "id": 2483902882,
    "node_id": "I_kwDOAAiDnM6UDVmi",
    "number": 5177,
    "title": "When a send a big data to server, I can't get 413 error by listen ‘disconnect’ event",
    "user": {
      "login": "shuntian",
      "id": 18205690,
      "node_id": "MDQ6VXNlcjE4MjA1Njkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/18205690?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shuntian",
      "html_url": "https://github.com/shuntian",
      "followers_url": "https://api.github.com/users/shuntian/followers",
      "following_url": "https://api.github.com/users/shuntian/following{/other_user}",
      "gists_url": "https://api.github.com/users/shuntian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shuntian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shuntian/subscriptions",
      "organizations_url": "https://api.github.com/users/shuntian/orgs",
      "repos_url": "https://api.github.com/users/shuntian/repos",
      "events_url": "https://api.github.com/users/shuntian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shuntian/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206558,
        "node_id": "MDU6TGFiZWwyMDY1NTg=",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/documentation",
        "name": "documentation",
        "color": "DDDDDD",
        "default": true,
        "description": "Improvements or additions to documentation"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-08-13T10:36:47Z",
    "updated_at": "2024-09-18T10:28:26Z",
    "closed_at": "2024-09-18T10:28:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "socket.io: 4.6.1\r\nsocket.io-client: 4.6.1 ",
    "closed_by": {
      "login": "darrachequesne",
      "id": 13031701,
      "node_id": "MDQ6VXNlcjEzMDMxNzAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13031701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darrachequesne",
      "html_url": "https://github.com/darrachequesne",
      "followers_url": "https://api.github.com/users/darrachequesne/followers",
      "following_url": "https://api.github.com/users/darrachequesne/following{/other_user}",
      "gists_url": "https://api.github.com/users/darrachequesne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darrachequesne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darrachequesne/subscriptions",
      "organizations_url": "https://api.github.com/users/darrachequesne/orgs",
      "repos_url": "https://api.github.com/users/darrachequesne/repos",
      "events_url": "https://api.github.com/users/darrachequesne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darrachequesne/received_events",
      "type": "User",
      "site_admin": false
    },
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5177/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5177/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5169",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5169/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5169/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5169/events",
    "html_url": "https://github.com/socketio/socket.io/pull/5169",
    "id": 2461053362,
    "node_id": "PR_kwDOAAiDnM54HE-f",
    "number": 5169,
    "title": "remove prettier v2",
    "user": {
      "login": "jokester",
      "id": 802130,
      "node_id": "MDQ6VXNlcjgwMjEzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/802130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jokester",
      "html_url": "https://github.com/jokester",
      "followers_url": "https://api.github.com/users/jokester/followers",
      "following_url": "https://api.github.com/users/jokester/following{/other_user}",
      "gists_url": "https://api.github.com/users/jokester/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jokester/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jokester/subscriptions",
      "organizations_url": "https://api.github.com/users/jokester/orgs",
      "repos_url": "https://api.github.com/users/jokester/repos",
      "events_url": "https://api.github.com/users/jokester/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jokester/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-08-12T13:44:05Z",
    "updated_at": "2024-09-17T05:11:32Z",
    "closed_at": "2024-09-16T06:43:08Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/socketio/socket.io/pulls/5169",
      "html_url": "https://github.com/socketio/socket.io/pull/5169",
      "diff_url": "https://github.com/socketio/socket.io/pull/5169.diff",
      "patch_url": "https://github.com/socketio/socket.io/pull/5169.patch",
      "merged_at": "2024-09-16T06:43:08Z"
    },
    "body": "### The kind of change this PR does introduce\r\n\r\n* [ ] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [x] other\r\n\r\n### Current behavior\r\n\r\n2 versions of prettier, respectively v2 and v3, get installed.\r\n\r\n### New behavior\r\n\r\nOnly use prettier v3\r\n\r\n### Other information (e.g. related issues)\r\n\r\n\r\n",
    "closed_by": {
      "login": "darrachequesne",
      "id": 13031701,
      "node_id": "MDQ6VXNlcjEzMDMxNzAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13031701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darrachequesne",
      "html_url": "https://github.com/darrachequesne",
      "followers_url": "https://api.github.com/users/darrachequesne/followers",
      "following_url": "https://api.github.com/users/darrachequesne/following{/other_user}",
      "gists_url": "https://api.github.com/users/darrachequesne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darrachequesne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darrachequesne/subscriptions",
      "organizations_url": "https://api.github.com/users/darrachequesne/orgs",
      "repos_url": "https://api.github.com/users/darrachequesne/repos",
      "events_url": "https://api.github.com/users/darrachequesne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darrachequesne/received_events",
      "type": "User",
      "site_admin": false
    },
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5169/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5168",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5168/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5168/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5168/events",
    "html_url": "https://github.com/socketio/socket.io/pull/5168",
    "id": 2461039376,
    "node_id": "PR_kwDOAAiDnM54HB6A",
    "number": 5168,
    "title": "link to in-monorepo package versions ",
    "user": {
      "login": "jokester",
      "id": 802130,
      "node_id": "MDQ6VXNlcjgwMjEzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/802130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jokester",
      "html_url": "https://github.com/jokester",
      "followers_url": "https://api.github.com/users/jokester/followers",
      "following_url": "https://api.github.com/users/jokester/following{/other_user}",
      "gists_url": "https://api.github.com/users/jokester/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jokester/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jokester/subscriptions",
      "organizations_url": "https://api.github.com/users/jokester/orgs",
      "repos_url": "https://api.github.com/users/jokester/repos",
      "events_url": "https://api.github.com/users/jokester/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jokester/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2024-08-12T13:39:02Z",
    "updated_at": "2024-08-26T16:51:37Z",
    "closed_at": "2024-08-23T21:22:52Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/socketio/socket.io/pulls/5168",
      "html_url": "https://github.com/socketio/socket.io/pull/5168",
      "diff_url": "https://github.com/socketio/socket.io/pull/5168.diff",
      "patch_url": "https://github.com/socketio/socket.io/pull/5168.patch",
      "merged_at": null
    },
    "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\n\r\n`socket.io` uses npm version of `engine.io`, not the version in repo. So is `socket.io-client` using npm `engine.io-client`.\r\n\r\nIMHO this is not really making full use of monorepo .\r\n\r\n### New behavior\r\n\r\nLatest in-tree version used. `npm list` now shows:\r\n\r\n```\r\n├─┬ socket.io@4.7.5 -> ./packages/socket.io\r\n│ ├── accepts@1.3.8 deduped\r\n│ ├── base64id@2.0.0 deduped\r\n│ ├── cors@2.8.5 deduped\r\n│ ├── debug@4.3.5 deduped\r\n│ ├── engine.io@6.6.0 deduped -> ./packages/engine.io                    # change\r\n│ ├── socket.io-adapter@2.5.5 deduped -> ./packages/socket.io-adapter\r\n│ └── socket.io-parser@4.2.4 deduped -> ./packages/socket.io-parser\r\n```\r\n\r\n### Other information (e.g. related issues)\r\n\r\nRelated to https://github.com/socketio/socket.io/issues/5161 \r\n",
    "closed_by": {
      "login": "darrachequesne",
      "id": 13031701,
      "node_id": "MDQ6VXNlcjEzMDMxNzAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13031701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darrachequesne",
      "html_url": "https://github.com/darrachequesne",
      "followers_url": "https://api.github.com/users/darrachequesne/followers",
      "following_url": "https://api.github.com/users/darrachequesne/following{/other_user}",
      "gists_url": "https://api.github.com/users/darrachequesne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darrachequesne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darrachequesne/subscriptions",
      "organizations_url": "https://api.github.com/users/darrachequesne/orgs",
      "repos_url": "https://api.github.com/users/darrachequesne/repos",
      "events_url": "https://api.github.com/users/darrachequesne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darrachequesne/received_events",
      "type": "User",
      "site_admin": false
    },
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5168/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5168/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5167",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5167/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5167/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5167/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5167",
    "id": 2460641583,
    "node_id": "I_kwDOAAiDnM6Sqmkv",
    "number": 5167,
    "title": "Scaling a Node.js Application with Socket.IO in Kubernetes",
    "user": {
      "login": "jayrajmeh0",
      "id": 159906048,
      "node_id": "U_kgDOCYf5AA",
      "avatar_url": "https://avatars.githubusercontent.com/u/159906048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jayrajmeh0",
      "html_url": "https://github.com/jayrajmeh0",
      "followers_url": "https://api.github.com/users/jayrajmeh0/followers",
      "following_url": "https://api.github.com/users/jayrajmeh0/following{/other_user}",
      "gists_url": "https://api.github.com/users/jayrajmeh0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jayrajmeh0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jayrajmeh0/subscriptions",
      "organizations_url": "https://api.github.com/users/jayrajmeh0/orgs",
      "repos_url": "https://api.github.com/users/jayrajmeh0/repos",
      "events_url": "https://api.github.com/users/jayrajmeh0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jayrajmeh0/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2111669362,
        "node_id": "MDU6TGFiZWwyMTExNjY5MzYy",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/question",
        "name": "question",
        "color": "d876e3",
        "default": true,
        "description": "Further information is requested"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-08-12T10:40:39Z",
    "updated_at": "2024-09-17T12:18:31Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Introduction\r\n- When deploying a Node.js application that uses Socket.IO for real-time communication, scaling can be challenging due to the need for session consistency and message broadcasting across multiple instances. Using a Redis adapter and Redis emitter can help manage these challenges effectively.\r\n\r\nPrerequisites\r\n- Kubernetes Cluster: A running Kubernetes cluster.\r\n- Redis: A Redis instance accessible by the Node.js application.\r\n- Node.js Application: An existing Node.js application using Socket.IO.\r\n\r\n![Screenshot_796](https://github.com/user-attachments/assets/5f2beda6-c03c-4ea7-94c3-1ccbc6358853)\r\n![Screenshot_797](https://github.com/user-attachments/assets/187fa746-c6a5-4e14-b804-7681f364d4cb)\r\n\r\nNode Code:\r\n```\r\nimport express from 'express';\r\nimport http from 'http';\r\nimport { Server } from 'socket.io';\r\nimport cors from 'cors';\r\nimport { createAdapter } from '@socket.io/redis-adapter';\r\nimport { createClient } from 'redis';\r\nimport { Emitter } from '@socket.io/redis-emitter';\r\n\r\nconst app = express();\r\nconst server = http.createServer(app);\r\n\r\n// Get Redis external IP and port from environment variables\r\nconst redisHost = process.env.REDIS_HOST || '192.168.0.49'; // Update this to your Redis IP\r\nconst redisPort = Number(process.env.REDIS_PORT) || 31225; // Update this to your Redis port\r\n\r\n// Create a Redis client\r\nconst redisClient = createClient({ url: `redis://${redisHost}:${redisPort}` });\r\nconst subClient = redisClient.duplicate();\r\n\r\n\r\n// Handle Redis connection errors\r\nredisClient.on('error', (err) => {\r\n  console.error('Redis client error:', err);\r\n});\r\n\r\n// Set up CORS options for Socket.IO\r\nconst io = new Server(server, {\r\n  cors: {\r\n    origin: '*',\r\n    methods: ['GET', 'POST'],\r\n    credentials: true,\r\n  },\r\n});\r\n\r\n// Connect to Redis and configure Socket.IO\r\nredisClient.connect().then(() => {\r\n  console.log('Connected to Redis');\r\n\r\n  // Set the Redis adapter for Socket.IO\r\n  io.adapter(createAdapter(redisClient, subClient));\r\n\r\n  // Create a Redis emitter\r\n  const emitter = new Emitter(redisClient);\r\n\r\n  // Emit a message every 5 seconds\r\n  setInterval(() => {\r\n    const currentTime = new Date();\r\n    console.log('Emitting time:', currentTime);\r\n    emitter.emit('time', currentTime.toISOString()); // Emit the current time in ISO format\r\n  }, 5000); // Emit every 5 seconds\r\n}).catch((err) => {\r\n  console.error('Redis connection error:', err);\r\n});\r\n\r\n// Enable CORS for all routes\r\napp.use(cors());\r\n\r\n// Handle Socket.IO connections\r\nio.on('connection', (socket) => {\r\n  console.log('New client connected');\r\n\r\n  // Listen for the 'time' event emitted by Redis\r\n  socket.on('time', (time) => {\r\n    console.log('Time received:', time);\r\n    socket.emit('time', time); // Send the time to the connected client\r\n  });\r\n\r\n  // Listen for the 'time' event from the emitter and send to the client\r\n  socket.on('subscribeToTime', () => {\r\n    console.log('Client subscribed to time updates');\r\n    socket.join('time-updates');\r\n  });\r\n\r\n  // Listen for incoming messages and broadcast them\r\n  socket.on('sendMessage', (message) => {\r\n    io.emit('receiveMessage', message);\r\n  });\r\n\r\n  socket.on('disconnect', () => {\r\n    console.log('Client disconnected');\r\n  });\r\n});\r\n\r\n// Listen to Redis for 'time' events and broadcast them to all clients\r\nsubClient.on('message', (channel: string, message: string) => {\r\n  if (channel === 'time') {\r\n    const time = new Date(message);\r\n    io.to('time-updates').emit('time', time); // Emit the time to subscribed clients\r\n  }\r\n});\r\n\r\n// Subscribe to the 'time' channel\r\nsubClient.subscribe('time', (err) => {\r\n  if (err) {\r\n    console.error('Failed to subscribe to time channel:', err);\r\n  } else {\r\n    console.log('Subscribed to time channel');\r\n  }\r\n});\r\n\r\n// Start the server\r\nconst PORT = process.env.PORT || 5001;\r\nserver.listen(PORT, () => console.log(`Server running on port ${PORT}`));\r\n```\r\nApp.tsx\r\n```\r\nClient App code (react js)\r\nimport React from 'react';\r\nimport { Chat } from './Chat';\r\nimport { io } from 'socket.io-client';\r\n\r\n// Use an environment variable or fallback to a default URL\r\nconsole.log(process.env.REACT_APP_SOCKET_URL)\r\nconst socket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5001');\r\nconsole.log(socket)\r\nconst App: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <h1>Group Chat Application</h1>\r\n            <Chat socket={socket} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n```\r\nChat.tsx\r\n```\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Socket } from 'socket.io-client'; // Import the Socket type\r\n\r\ninterface ChatProps {\r\n    socket: Socket; // Use the Socket type here\r\n}\r\n\r\nexport const Chat: React.FC<ChatProps> = ({ socket }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        socket.on('receiveMessage', (message: string) => {\r\n            setMessages((prev) => [...prev, message]);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('receiveMessage'); // Clean up the listener on unmount\r\n        };\r\n    }, [socket]);\r\n\r\n    const sendMessage = () => {\r\n        if (message) {\r\n            socket.emit('sendMessage', message);\r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <div>\r\n                {messages.map((msg, index) => (\r\n                    <div key={index}>{msg}</div>\r\n                ))}\r\n            </div>\r\n            <input\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                        sendMessage();\r\n                    }\r\n                }}\r\n            />\r\n            <button onClick={sendMessage}>Send</button>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5167/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5167/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5166",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5166/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5166/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5166/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5166",
    "id": 2459910848,
    "node_id": "I_kwDOAAiDnM6Sn0LA",
    "number": 5166,
    "title": "recovery ability (parameter : maxDisconnectionDuration: 2 * 60 * 1000) Over 2 minute ,it still can send message to another client???",
    "user": {
      "login": "skyfall1970",
      "id": 6309529,
      "node_id": "MDQ6VXNlcjYzMDk1Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6309529?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skyfall1970",
      "html_url": "https://github.com/skyfall1970",
      "followers_url": "https://api.github.com/users/skyfall1970/followers",
      "following_url": "https://api.github.com/users/skyfall1970/following{/other_user}",
      "gists_url": "https://api.github.com/users/skyfall1970/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skyfall1970/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skyfall1970/subscriptions",
      "organizations_url": "https://api.github.com/users/skyfall1970/orgs",
      "repos_url": "https://api.github.com/users/skyfall1970/repos",
      "events_url": "https://api.github.com/users/skyfall1970/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skyfall1970/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2111669362,
        "node_id": "MDU6TGFiZWwyMTExNjY5MzYy",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/question",
        "name": "question",
        "color": "d876e3",
        "default": true,
        "description": "Further information is requested"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-08-12T02:17:32Z",
    "updated_at": "2024-09-17T12:18:04Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nrecovery function : maxDisconnectionDuration is not work\r\n\r\n**To Reproduce**\r\ni use official way:\r\nhttps://socket.io/docs/v4/connection-state-recovery\r\n\r\ni write a sample code :\r\nhttps://codesandbox.io/p/devbox/github/socketio/chat-example/tree/cjs/step6?file=%2Findex.js%3A9%2C3-9%2C26\r\nset parameter:\r\nmaxDisconnectionDuration: 2 * 60 * 1000 (2 minute)\r\nskipMiddlewares: true\r\n\r\nTest Case:\r\nwhen disconnect the network : (1)elapsed time 30 second and i send message ,continue to (2) elapsed time 150 second(2 minute 30 second) and i send message\r\nRecovery the network in elapsed time 3 minute , it still can send ( elapsed time 150 second) over time -maxDisconnectionDuration message to another client.\r\n\r\nMy question:\r\nwhy does it over maxDisconnectionDuration time , it still can send message and client be received message???\r\n\r\n\r\nPlease fill the following code example:\r\n\r\nhttps://codesandbox.io/p/devbox/github/socketio/chat-example/tree/cjs/step6?file=%2Findex.js%3A9%2C3-9%2C26\r\n(but i set parameter below:\r\n  connectionStateRecovery: {\r\n    // the backup duration of the sessions and the packets\r\n    maxDisconnectionDuration: 2 * 60 * 1000,\r\n    // whether to skip middlewares upon successful recovery\r\n    skipMiddlewares: true,\r\n  }\r\n)\r\n\r\nSocket.IO server version: `4.7.5`\r\n\r\n*Server*\r\n```\r\nconst express = require('express');\r\nconst { createServer } = require('node:http');\r\nconst { join } = require('node:path');\r\nconst { Server } = require('socket.io');\r\n\r\nconst app = express();\r\nconst server = createServer(app);\r\nconst io = new Server(server, {\r\n  connectionStateRecovery: {}\r\n});\r\n\r\napp.get('/', (req, res) => {\r\n  res.sendFile(join(__dirname, 'index.html'));\r\n});\r\n\r\nio.on('connection', (socket) => {\r\n  socket.on('chat message', (msg) => {\r\n    io.emit('chat message', msg);\r\n  });\r\n});\r\n\r\nserver.listen(3000, () => {\r\n  console.log('server running at http://localhost:3000');\r\n});\r\n```\r\n\r\nSocket.IO client version: `4.7.5`\r\n\r\n*Client*\r\n```\r\n <script src=\"/socket.io/socket.io.js\"></script>\r\n  <script>\r\n    const socket = io();\r\n\r\n    const form = document.getElementById('form');\r\n    const input = document.getElementById('input');\r\n    const messages = document.getElementById('messages');\r\n\r\n    form.addEventListener('submit', (e) => {\r\n      e.preventDefault();\r\n      if (input.value) {\r\n        socket.emit('chat message', input.value);\r\n        input.value = '';\r\n      }\r\n    });\r\n\r\n    socket.on('chat message', (msg) => {\r\n      const item = document.createElement('li');\r\n      item.textContent = msg;\r\n      messages.appendChild(item);\r\n      window.scrollTo(0, document.body.scrollHeight);\r\n    });\r\n  </script>\r\n```\r\n\r\n**Expected behavior** \r\n\r\n when disconnect time is over 2 minute, i send  the message . \r\nthe messge should not be received by another client.\r\n\r\n**Platform:**\r\n - Device: Ubuntu 16.04\r\n\r\n\r\n**Additional context**\r\nwhatever maxDisconnectionDuration is  1 min, 2 min ,5 min ;  all over-time message can be received by another client.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5166/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5166/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5164",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5164/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5164/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5164/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5164",
    "id": 2459083002,
    "node_id": "I_kwDOAAiDnM6SkqD6",
    "number": 5164,
    "title": "Only receiving first Message",
    "user": {
      "login": "Angeschossen",
      "id": 24841122,
      "node_id": "MDQ6VXNlcjI0ODQxMTIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/24841122?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Angeschossen",
      "html_url": "https://github.com/Angeschossen",
      "followers_url": "https://api.github.com/users/Angeschossen/followers",
      "following_url": "https://api.github.com/users/Angeschossen/following{/other_user}",
      "gists_url": "https://api.github.com/users/Angeschossen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Angeschossen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Angeschossen/subscriptions",
      "organizations_url": "https://api.github.com/users/Angeschossen/orgs",
      "repos_url": "https://api.github.com/users/Angeschossen/repos",
      "events_url": "https://api.github.com/users/Angeschossen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Angeschossen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2111669362,
        "node_id": "MDU6TGFiZWwyMTExNjY5MzYy",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/question",
        "name": "question",
        "color": "d876e3",
        "default": true,
        "description": "Further information is requested"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-08-10T13:23:36Z",
    "updated_at": "2024-09-17T12:10:13Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nAfter the first message is received, it no longer receives messages. Very rarely I dont receive any message at all. I only seem to experience this in the development mode (npm run dev of Next.js 14)\r\n\r\nI have a very simple socket IO setup example below. Basically a simple page in the /app dir of Next.js and the API endpoint for the socket server creation in the old /pages dir. After the websocket server is created, it emits a message to the `hello` channel each second. When the page is loaded I only receive the message once. Very rarely, it works as intended. 90% of the time I only receive the first message.\r\n\r\nI also noticed that it does some polling once a minute or so. I'm not sure why it does that, as the connection seems to be established and upgraded to websocket. Here is a screenshot from the network tab: [Imgur](https://imgur.com/ZGVkqlG)\r\nThis is how the developer console looks like: [Imgur](https://imgur.com/va1xxcJ)\r\n\r\nNo errors server side.\r\nAdditionally, seems to fix itself after like 10 minutes, the messages start coming again.\r\n\r\n**To Reproduce**\r\nYou can find the example page (page.tsx), which is located in Next.js /app dir, and the API endpoint for the socket server creation, which is located in the old /pages/api dir, at this gist: https://gist.github.com/Angeschossen/84e1b50d93b5a0c1425eed4776a999d0\r\n\r\nNext.js: v. 14.2.5\r\nSocketIO and Client: 4.7.5 \r\n\r\n**Expected behavior**\r\nEach message should be received. As you can see the API endpoint emits a message every second.\r\n\r\n**Platform:**\r\n - Windows, Chrome \r\n\r\n**Additional context**\r\nI have react strict mode disabled.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5164/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5164/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5161",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5161/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5161/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5161/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5161",
    "id": 2454627462,
    "node_id": "I_kwDOAAiDnM6STqSG",
    "number": 5161,
    "title": "Webtransport is not defined in typing",
    "user": {
      "login": "jtapeg",
      "id": 52453013,
      "node_id": "MDQ6VXNlcjUyNDUzMDEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/52453013?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtapeg",
      "html_url": "https://github.com/jtapeg",
      "followers_url": "https://api.github.com/users/jtapeg/followers",
      "following_url": "https://api.github.com/users/jtapeg/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtapeg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtapeg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtapeg/subscriptions",
      "organizations_url": "https://api.github.com/users/jtapeg/orgs",
      "repos_url": "https://api.github.com/users/jtapeg/repos",
      "events_url": "https://api.github.com/users/jtapeg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtapeg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 80315,
        "node_id": "MDU6TGFiZWw4MDMxNQ==",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/bug",
        "name": "bug",
        "color": "d73a4a",
        "default": true,
        "description": "Something isn't working"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/socketio/socket.io/milestones/53",
      "html_url": "https://github.com/socketio/socket.io/milestone/53",
      "labels_url": "https://api.github.com/repos/socketio/socket.io/milestones/53/labels",
      "id": 11589080,
      "node_id": "MI_kwDOAAiDnM4AsNXY",
      "number": 53,
      "title": "socket.io@next",
      "description": "",
      "creator": {
        "login": "darrachequesne",
        "id": 13031701,
        "node_id": "MDQ6VXNlcjEzMDMxNzAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/13031701?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darrachequesne",
        "html_url": "https://github.com/darrachequesne",
        "followers_url": "https://api.github.com/users/darrachequesne/followers",
        "following_url": "https://api.github.com/users/darrachequesne/following{/other_user}",
        "gists_url": "https://api.github.com/users/darrachequesne/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/darrachequesne/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/darrachequesne/subscriptions",
        "organizations_url": "https://api.github.com/users/darrachequesne/orgs",
        "repos_url": "https://api.github.com/users/darrachequesne/repos",
        "events_url": "https://api.github.com/users/darrachequesne/events{/privacy}",
        "received_events_url": "https://api.github.com/users/darrachequesne/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 7,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2024-09-16T13:56:08Z",
      "updated_at": "2024-09-20T09:19:28Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 3,
    "created_at": "2024-08-08T01:04:44Z",
    "updated_at": "2024-09-17T12:18:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using the latest version of socket.io\r\n\r\n![image](https://github.com/user-attachments/assets/da958591-1520-4037-a589-60dfb167308b)\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5161/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5161/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5160",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5160/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5160/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5160/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5160",
    "id": 2454394557,
    "node_id": "I_kwDOAAiDnM6SSxa9",
    "number": 5160,
    "title": "SocketIO import on shared worker causes: \"Failed to execute 'importScripts' on 'WorkerGlobalScope'\"",
    "user": {
      "login": "JoshAvakian",
      "id": 105238755,
      "node_id": "U_kgDOBkXQ4w",
      "avatar_url": "https://avatars.githubusercontent.com/u/105238755?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoshAvakian",
      "html_url": "https://github.com/JoshAvakian",
      "followers_url": "https://api.github.com/users/JoshAvakian/followers",
      "following_url": "https://api.github.com/users/JoshAvakian/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoshAvakian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoshAvakian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoshAvakian/subscriptions",
      "organizations_url": "https://api.github.com/users/JoshAvakian/orgs",
      "repos_url": "https://api.github.com/users/JoshAvakian/repos",
      "events_url": "https://api.github.com/users/JoshAvakian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoshAvakian/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2833344293,
        "node_id": "MDU6TGFiZWwyODMzMzQ0Mjkz",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/needs%20investigation",
        "name": "needs investigation",
        "color": "B9DDCE",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-08-07T21:33:31Z",
    "updated_at": "2024-09-17T12:19:33Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\nUsing 4.7.5, when running a production build utilizing shared workers, socket.IO import causes a DOMException. Development builds and virtual environment (localhost) do not have this issue\r\n\r\n**To Reproduce**\r\n\r\n1. Create a shared worker within any react app, and import socketIO in the shared worker like so:\r\n\r\n```\r\nimport { io } from 'socket.io-client';\r\n```\r\n\r\n2. In your react app, call this shared worker (can perform any task, the import is what causes the issue)\r\n\r\n3. Run a production build using yarn\r\n\r\nWhen opening the new production build, worker file will not run, and opening the console on the shared worker will look like this:\r\n\r\n\"Uncaught DOMException: Failed to execute 'importScripts' on 'WorkerGlobalScope': The script at 'https://yourApp/static/js/static/js/3002.2646329c.chunk.js' failed to load.\"\r\n\r\nWhen removing the socket.io import and re-running the build, the worker will no longer throw this error.\r\n\r\n**Expected behavior**\r\nNo importScripts error is thrown, and shared workers can open their own socket session.\r\n\r\n**Platform:**\r\n - Device: Lenovo ThinkBook 15p\r\n - OS: Ubuntu\r\n\r\n**Additional context**\r\nPlease note that a development build and a local environment will not throw this error in the shared worker. We discovered it only after we ran a production build using yarn\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5160/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5159",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5159/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5159/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5159/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5159",
    "id": 2454111427,
    "node_id": "I_kwDOAAiDnM6SRsTD",
    "number": 5159,
    "title": "issues Connecting to Socket.IO on Nginx Server via Postman",
    "user": {
      "login": "yassineMessaoud9",
      "id": 98484999,
      "node_id": "U_kgDOBd7DBw",
      "avatar_url": "https://avatars.githubusercontent.com/u/98484999?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yassineMessaoud9",
      "html_url": "https://github.com/yassineMessaoud9",
      "followers_url": "https://api.github.com/users/yassineMessaoud9/followers",
      "following_url": "https://api.github.com/users/yassineMessaoud9/following{/other_user}",
      "gists_url": "https://api.github.com/users/yassineMessaoud9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yassineMessaoud9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yassineMessaoud9/subscriptions",
      "organizations_url": "https://api.github.com/users/yassineMessaoud9/orgs",
      "repos_url": "https://api.github.com/users/yassineMessaoud9/repos",
      "events_url": "https://api.github.com/users/yassineMessaoud9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yassineMessaoud9/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2986024035,
        "node_id": "MDU6TGFiZWwyOTg2MDI0MDM1",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
        "name": "to triage",
        "color": "FFD700",
        "default": false,
        "description": "Waiting to be triaged by a member of the team"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-08-07T18:45:43Z",
    "updated_at": "2024-08-08T10:07:12Z",
    "closed_at": "2024-08-08T10:07:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello everyone,\r\n\r\nI'm new to Nginx and I'm trying to connect to a Socket.IO endpoint via Postman. My Node.js project is deployed on an Nginx server. When I attempt to connect to my endpoint at https://octoc-api.dev.ip-label.io/api, I encounter the following error:\r\n\r\nCould not connect to https://octoc-api.dev.ip-label.io/api\r\n18:54:02\r\nError: Invalid namespace\r\nHandshake Details\r\nRequest URL: https://octoc-api.dev.ip-label.io/socket.io/?EIO=4&transport=websocket\r\nRequest Method: GET\r\nRequest Headers\r\nSec-WebSocket-Version: 13\r\nSec-WebSocket-Key: hel82z6Ibahidpqk60XpyQ==\r\nConnection: Upgrade\r\nUpgrade: websocket\r\nSec-WebSocket-Extensions: permessage-deflate; client_max_window_bits\r\nHost: octoc-api.dev.ip-label.io,\r\nHowever, when I try connecting to https://octoc-api.dev.ip-label.io, the connection succeeds, but it doesn't match with my Express project folder structure.\r\n\r\nHere is my Nginx configuration file:\r\n\r\nserver {\r\n    listen 80;\r\n    server_name octoc-api.dev.ip-label.io;\r\n    return 301 https://$host$request_uri;\r\n}\r\n\r\nserver {\r\n    listen 443 ssl;\r\n    server_name octoc-api.dev.ip-label.io;\r\n\r\n    ssl_certificate /etc/ssl/certs/ekara.crt;\r\n    ssl_certificate_key /etc/ssl/private/ekara.key;\r\n\r\n    location /api {\r\n        rewrite ^/api(.*)$ $1 break;\r\n        proxy_pass http://localhost:3002;\r\n        proxy_set_header X-Real-IP $remote_addr;\r\n        proxy_set_header Host $host;\r\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n\r\n        proxy_http_version 1.1;\r\n        proxy_set_header Upgrade $http_upgrade;\r\n        proxy_set_header Connection \"upgrade\";\r\n    }\r\n\r\n    location /socket.io/ {\r\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n        proxy_set_header Host $host;\r\n\r\n        proxy_pass http://localhost:3002;\r\n\r\n        proxy_http_version 1.1;\r\n        proxy_set_header Upgrade $http_upgrade;\r\n        proxy_set_header Connection \"upgrade\";\r\n    }\r\n}\r\nMy server.js file is as follows:\r\n\r\n\r\nconst express = require('express');\r\nconst { createServer } = require('http');\r\nconst { Server } = require('socket.io');\r\n\r\nconst app = express();\r\nconst http = createServer(app);\r\nconst io = new Server(http, {\r\n    cors: {\r\n        origin: '*',\r\n        credentials: true,\r\n    },\r\n});\r\n\r\ninitSocketCommunication(io);\r\nglobal.io = io;\r\n\r\nhttp.listen(3002, () => {\r\n    console.log('Server is listening on port 3002');\r\n});\r\nAnd my socket.js file:\r\n\r\n\r\nexport default function initSocketCommunication(io) {\r\n    io.on('connection', (socket) => {\r\n        console.log('Client Connected.', socket.id);\r\n\r\n        socket.emit('hello', { message: 'Hello from server!' });\r\n\r\n        socket.on('disconnect', (reason) => {\r\n            console.log('Client Disconnected.', reason);\r\n            socket.broadcast.emit('user_leave', reason);\r\n        });\r\n\r\n        socket.on('send_noc_room', async (data) => {\r\n            try {\r\n                await CreateNocRoom2({ body: data, params: { id: data.creator } }, {}, io);\r\n                console.log('NOC room created and data sent!');\r\n            } catch (err) {\r\n                console.error('Error in send_noc_room:', err);\r\n            }\r\n        });\r\n\r\n        socket.on('send_troubleShooting_invitation', async function (data) {\r\n            try {\r\n                console.log(data);\r\n                await SetInvitedParties(data.troubleshooting_id, data.invited);\r\n\r\n                data.invited.forEach((userID) => {\r\n                    io.emit(`get_invitation/${userID}`, {\r\n                        tr_id: data.troubleshooting_id,\r\n                        senderID: data.senderID,\r\n                        message: data.message,\r\n                        senderName: data.senderName,\r\n                    });\r\n\r\n                    console.log(`Invitation emitted to user: ${userID}`);\r\n                });\r\n            } catch (error) {\r\n                console.error(`Failed to emit 'get_invitation': ${error}`);\r\n            }\r\n        });\r\n    });\r\n}\r\nCan someone help me understand how to configure Nginx and my Node.js project correctly so that I can connect to https://octoc-api.dev.ip-label.io/api using Socket.IO via Postman?\r\n\r\nAny guidance or suggestions would be greatly appreciated.\r\n\r\nThank you!",
    "closed_by": {
      "login": "yassineMessaoud9",
      "id": 98484999,
      "node_id": "U_kgDOBd7DBw",
      "avatar_url": "https://avatars.githubusercontent.com/u/98484999?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yassineMessaoud9",
      "html_url": "https://github.com/yassineMessaoud9",
      "followers_url": "https://api.github.com/users/yassineMessaoud9/followers",
      "following_url": "https://api.github.com/users/yassineMessaoud9/following{/other_user}",
      "gists_url": "https://api.github.com/users/yassineMessaoud9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yassineMessaoud9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yassineMessaoud9/subscriptions",
      "organizations_url": "https://api.github.com/users/yassineMessaoud9/orgs",
      "repos_url": "https://api.github.com/users/yassineMessaoud9/repos",
      "events_url": "https://api.github.com/users/yassineMessaoud9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yassineMessaoud9/received_events",
      "type": "User",
      "site_admin": false
    },
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5159/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5158",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5158/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5158/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5158/events",
    "html_url": "https://github.com/socketio/socket.io/pull/5158",
    "id": 2453029853,
    "node_id": "PR_kwDOAAiDnM53sDSA",
    "number": 5158,
    "title": "fix: track socket before run middlewares",
    "user": {
      "login": "TXWSLYF",
      "id": 25768349,
      "node_id": "MDQ6VXNlcjI1NzY4MzQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/25768349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TXWSLYF",
      "html_url": "https://github.com/TXWSLYF",
      "followers_url": "https://api.github.com/users/TXWSLYF/followers",
      "following_url": "https://api.github.com/users/TXWSLYF/following{/other_user}",
      "gists_url": "https://api.github.com/users/TXWSLYF/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TXWSLYF/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TXWSLYF/subscriptions",
      "organizations_url": "https://api.github.com/users/TXWSLYF/orgs",
      "repos_url": "https://api.github.com/users/TXWSLYF/repos",
      "events_url": "https://api.github.com/users/TXWSLYF/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TXWSLYF/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-08-07T09:35:40Z",
    "updated_at": "2024-09-20T08:59:25Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/socketio/socket.io/pulls/5158",
      "html_url": "https://github.com/socketio/socket.io/pull/5158",
      "diff_url": "https://github.com/socketio/socket.io/pull/5158.diff",
      "patch_url": "https://github.com/socketio/socket.io/pull/5158.patch",
      "merged_at": null
    },
    "body": "### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\nthe socket is not tracked when run the middlewares\r\n\r\n### New behavior\r\ntrack socket before run middlewares\r\n\r\n### Other information (e.g. related issues)\r\nfix: https://github.com/socketio/socket.io/issues/5139\r\n\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5158/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5155",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5155/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5155/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5155/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5155",
    "id": 2440235540,
    "node_id": "I_kwDOAAiDnM6RcwoU",
    "number": 5155,
    "title": "\"io is not defined\" after adding import/export",
    "user": {
      "login": "hmathers",
      "id": 16958255,
      "node_id": "MDQ6VXNlcjE2OTU4MjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/16958255?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hmathers",
      "html_url": "https://github.com/hmathers",
      "followers_url": "https://api.github.com/users/hmathers/followers",
      "following_url": "https://api.github.com/users/hmathers/following{/other_user}",
      "gists_url": "https://api.github.com/users/hmathers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hmathers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hmathers/subscriptions",
      "organizations_url": "https://api.github.com/users/hmathers/orgs",
      "repos_url": "https://api.github.com/users/hmathers/repos",
      "events_url": "https://api.github.com/users/hmathers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hmathers/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2986024035,
        "node_id": "MDU6TGFiZWwyOTg2MDI0MDM1",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/to%20triage",
        "name": "to triage",
        "color": "FFD700",
        "default": false,
        "description": "Waiting to be triaged by a member of the team"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2024-07-31T14:41:38Z",
    "updated_at": "2024-08-01T11:58:11Z",
    "closed_at": "2024-08-01T11:58:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\n\r\nI've been working with two different projects that are structured mostly the same, but there's an error happening with socket (v4.7.5) in one that isn't happening in the other\r\n\r\nProject A throws no errors, it has a main.js file, a server.js file, and a client.js file; main exports some stuff to server and client, and client doesn't export anything but it does define `const socket = io({path:\"/path/to/socket.io\"})`\r\n\r\nProject B has a main.js file and a server.js file and until a few days ago there was no need for the client.js file. The main file in this case is the one that has `const socket = io({path:\"/path/to/socket.io\"})` which works fine, but when I try to export something from main to server I start getting \"ReferenceError: io is not defined\" as soon as I add the line `import * as main from \"./main.js\"` in server (not when I add \"export\" in main)\r\n\r\nClient side, both index.html files mostly just do this:\r\n```\r\n<script defer src=\"/path/to/socket.io/socket.io.min.js\"></script>\r\n<script defer src=\"main.js\" type=\"module\"></script>\r\n<!-- <script defer src=\"client.js\" type=\"module\"></script> -->\r\n```\r\n\r\nAnd the server files start like this:\r\n```\r\nimport express from \"express\"\r\nimport http from \"node:http\"\r\nimport {Server} from \"socket.io\"\r\n// import * as main from \"./main.js\"\r\nconst app = express(), httpServer = http.createServer(app),\r\nio = new Server(httpServer,{path:\"/to/socket.io\"})\r\n```",
    "closed_by": {
      "login": "hmathers",
      "id": 16958255,
      "node_id": "MDQ6VXNlcjE2OTU4MjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/16958255?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hmathers",
      "html_url": "https://github.com/hmathers",
      "followers_url": "https://api.github.com/users/hmathers/followers",
      "following_url": "https://api.github.com/users/hmathers/following{/other_user}",
      "gists_url": "https://api.github.com/users/hmathers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hmathers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hmathers/subscriptions",
      "organizations_url": "https://api.github.com/users/hmathers/orgs",
      "repos_url": "https://api.github.com/users/hmathers/repos",
      "events_url": "https://api.github.com/users/hmathers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hmathers/received_events",
      "type": "User",
      "site_admin": false
    },
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5155/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5148",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5148/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5148/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5148/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5148",
    "id": 2431000143,
    "node_id": "I_kwDOAAiDnM6Q5h5P",
    "number": 5148,
    "title": "CORS works even if it is not enabled",
    "user": {
      "login": "alexandrmucha",
      "id": 130845337,
      "node_id": "U_kgDOB8yKmQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/130845337?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexandrmucha",
      "html_url": "https://github.com/alexandrmucha",
      "followers_url": "https://api.github.com/users/alexandrmucha/followers",
      "following_url": "https://api.github.com/users/alexandrmucha/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexandrmucha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexandrmucha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexandrmucha/subscriptions",
      "organizations_url": "https://api.github.com/users/alexandrmucha/orgs",
      "repos_url": "https://api.github.com/users/alexandrmucha/repos",
      "events_url": "https://api.github.com/users/alexandrmucha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexandrmucha/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2111669362,
        "node_id": "MDU6TGFiZWwyMTExNjY5MzYy",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/question",
        "name": "question",
        "color": "d876e3",
        "default": true,
        "description": "Further information is requested"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2024-07-25T21:25:04Z",
    "updated_at": "2024-08-01T12:18:35Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nI am using socket.io in nuxt. Even though I didn't enable cors, it is possible to connect from a different origin than the one nuxt is running on. E.g. it runs on localhost:3000 and I can connect from localhost:8000. Is this a bug or is it my fault?\r\n\r\n**To Reproduce**\r\n\r\nPlease fill the following code example:\r\n\r\nSocket.IO server version: `^4.7.5`\r\n\r\n*Server*\r\n\r\n```js\r\nimport type { NitroApp } from \"nitropack\";\r\nimport { Server as Engine } from \"engine.io\";\r\nimport { Server } from \"socket.io\";\r\nimport { defineEventHandler } from \"h3\";\r\nimport { registerSocketHandlers } from \"../sockets\";\r\n\r\nexport default defineNitroPlugin((nitroApp: NitroApp) => {\r\n  const engine = new Engine();\r\n  const io = new Server();\r\n\r\n  io.bind(engine);\r\n\r\n  registerSocketHandlers(io);\r\n\r\n  nitroApp.router.use(\"/socket.io/\", defineEventHandler({\r\n    handler(event) {\r\n      engine.handleRequest(event.node.req, event.node.res);\r\n      event._handled = true;\r\n    },\r\n    websocket: {\r\n      open(peer) {\r\n        const nodeContext = peer.ctx.node;\r\n        const req = nodeContext.req;\r\n\r\n        // @ts-expect-error private method\r\n        engine.prepare(req);\r\n\r\n        const rawSocket = nodeContext.req.socket;\r\n        const websocket = nodeContext.ws;\r\n\r\n        // @ts-expect-error private method\r\n        engine.onWebSocket(req, rawSocket, websocket);\r\n      }\r\n    }\r\n  }));\r\n});\r\n```\r\n\r\nSocket.IO client version: `^4.7.5`\r\n\r\n*Client*\r\n\r\n```js\r\nsocket: io('http://localhost:3000', { transports: ['websocket', 'polling', 'flashsocket'] }),\r\n```\r\n\r\n**Expected behavior**\r\nIt will not be possible to connect from an origin other than the one defined or on which nuxt is running.\r\n\r\n**Platform:**\r\n - Device: PC\r\n - OS: Windows 10\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5148/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5146",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5146/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5146/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5146/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5146",
    "id": 2428960619,
    "node_id": "I_kwDOAAiDnM6Qxv9r",
    "number": 5146,
    "title": "io.protocol is undefined",
    "user": {
      "login": "Anand-Keshavan",
      "id": 119910635,
      "node_id": "U_kgDOByWw6w",
      "avatar_url": "https://avatars.githubusercontent.com/u/119910635?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Anand-Keshavan",
      "html_url": "https://github.com/Anand-Keshavan",
      "followers_url": "https://api.github.com/users/Anand-Keshavan/followers",
      "following_url": "https://api.github.com/users/Anand-Keshavan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Anand-Keshavan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Anand-Keshavan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Anand-Keshavan/subscriptions",
      "organizations_url": "https://api.github.com/users/Anand-Keshavan/orgs",
      "repos_url": "https://api.github.com/users/Anand-Keshavan/repos",
      "events_url": "https://api.github.com/users/Anand-Keshavan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Anand-Keshavan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2111669362,
        "node_id": "MDU6TGFiZWwyMTExNjY5MzYy",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/question",
        "name": "question",
        "color": "d876e3",
        "default": true,
        "description": "Further information is requested"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-07-25T04:25:37Z",
    "updated_at": "2024-09-18T10:28:49Z",
    "closed_at": "2024-09-18T10:28:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nio.protocol is undefined\r\n\r\n**To Reproduce**\r\n\r\nPlease fill the following code example:\r\n\r\nSocket.IO server version:  not relevant\r\n\r\n*Server*\r\n\r\n```js\r\n \r\n\r\n```\r\n\r\nSocket.IO client version: `4.7.5`\r\n\r\n*Client*\r\n\r\n```js\r\n import { io } from \"socket.io-client\";\r\nconst revisionNumber = io.protocol;\r\n\r\nconsole.log(`$$$Debug: SocketIo PROTOCOL NUMBER ${revisionNumber}`); --> undefined\r\n```\r\n\r\n**Expected behavior**\r\nexpected the socket protocol number.\r\n As the python-socketio server returns \"The client is using an unsupported version of the Socket.IO or Engine.IO protocols\"\r\nThis is  a monrepo with different components using different  versions of the socket.io client library.\r\nI need to figure out whether the library used by my component follows the correct protocol. \r\nIt is bad enough that there is no way to know the version of the library programmatically.\r\n\r\n**Platform:**\r\n - Device: [e.g. Samsung S8]\r\n - OS: [e.g. Android 9.2]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
    "closed_by": {
      "login": "darrachequesne",
      "id": 13031701,
      "node_id": "MDQ6VXNlcjEzMDMxNzAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13031701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darrachequesne",
      "html_url": "https://github.com/darrachequesne",
      "followers_url": "https://api.github.com/users/darrachequesne/followers",
      "following_url": "https://api.github.com/users/darrachequesne/following{/other_user}",
      "gists_url": "https://api.github.com/users/darrachequesne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darrachequesne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darrachequesne/subscriptions",
      "organizations_url": "https://api.github.com/users/darrachequesne/orgs",
      "repos_url": "https://api.github.com/users/darrachequesne/repos",
      "events_url": "https://api.github.com/users/darrachequesne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darrachequesne/received_events",
      "type": "User",
      "site_admin": false
    },
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5146/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5146/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5145",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5145/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5145/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5145/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5145",
    "id": 2428603615,
    "node_id": "I_kwDOAAiDnM6QwYzf",
    "number": 5145,
    "title": "socket.io package still using engine.io ~6.5.2",
    "user": {
      "login": "christhegrand",
      "id": 47118982,
      "node_id": "MDQ6VXNlcjQ3MTE4OTgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/47118982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christhegrand",
      "html_url": "https://github.com/christhegrand",
      "followers_url": "https://api.github.com/users/christhegrand/followers",
      "following_url": "https://api.github.com/users/christhegrand/following{/other_user}",
      "gists_url": "https://api.github.com/users/christhegrand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christhegrand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christhegrand/subscriptions",
      "organizations_url": "https://api.github.com/users/christhegrand/orgs",
      "repos_url": "https://api.github.com/users/christhegrand/repos",
      "events_url": "https://api.github.com/users/christhegrand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christhegrand/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 124367,
        "node_id": "MDU6TGFiZWwxMjQzNjc=",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/enhancement",
        "name": "enhancement",
        "color": "a2eeef",
        "default": true,
        "description": "New feature or request"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-07-24T22:58:54Z",
    "updated_at": "2024-07-25T16:46:51Z",
    "closed_at": "2024-07-25T16:46:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\n\r\nThe socket.io package is using engine.io ~6.5.2. That version of engine.io is using ws ~8.11.0. That version of ws has some security vulnerabilities. The current recommendation is to use at least version 8.17.1. See, for example, https://nvd.nist.gov/vuln/detail/CVE-2024-37890.\r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen.\r\n\r\nThe latest version of engine.io is using ws ~8.17.1, so we could update the socket.io package.json to use a later version of engine.io.\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n",
    "closed_by": {
      "login": "christhegrand",
      "id": 47118982,
      "node_id": "MDQ6VXNlcjQ3MTE4OTgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/47118982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christhegrand",
      "html_url": "https://github.com/christhegrand",
      "followers_url": "https://api.github.com/users/christhegrand/followers",
      "following_url": "https://api.github.com/users/christhegrand/following{/other_user}",
      "gists_url": "https://api.github.com/users/christhegrand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christhegrand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christhegrand/subscriptions",
      "organizations_url": "https://api.github.com/users/christhegrand/orgs",
      "repos_url": "https://api.github.com/users/christhegrand/repos",
      "events_url": "https://api.github.com/users/christhegrand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christhegrand/received_events",
      "type": "User",
      "site_admin": false
    },
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5145/timeline",
    "performed_via_github_app": null,
    "state_reason": "not_planned"
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5143",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5143/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5143/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5143/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5143",
    "id": 2422272366,
    "node_id": "I_kwDOAAiDnM6QYPFu",
    "number": 5143,
    "title": "socket.io-client does not work properly in Android(React-Native) with Laravel-echo ",
    "user": {
      "login": "Deep-Jani",
      "id": 141616727,
      "node_id": "U_kgDOCHDmVw",
      "avatar_url": "https://avatars.githubusercontent.com/u/141616727?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Deep-Jani",
      "html_url": "https://github.com/Deep-Jani",
      "followers_url": "https://api.github.com/users/Deep-Jani/followers",
      "following_url": "https://api.github.com/users/Deep-Jani/following{/other_user}",
      "gists_url": "https://api.github.com/users/Deep-Jani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Deep-Jani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Deep-Jani/subscriptions",
      "organizations_url": "https://api.github.com/users/Deep-Jani/orgs",
      "repos_url": "https://api.github.com/users/Deep-Jani/repos",
      "events_url": "https://api.github.com/users/Deep-Jani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Deep-Jani/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2833344293,
        "node_id": "MDU6TGFiZWwyODMzMzQ0Mjkz",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/needs%20investigation",
        "name": "needs investigation",
        "color": "B9DDCE",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2024-07-19T13:58:37Z",
    "updated_at": "2024-07-22T10:10:41Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When using **Socket.io** as a **broadcaster** in **Laravel-echo**, We are using **Socketio** from **socket.io-client** as a **client** for connecting to the socket ,joining into the channel and listen an event fired within the channel. \r\nWhile working with React Native v0.71.10, I am facing issue regarded to the listening to the event.\r\nThe code works fine in **iOS** devices, but in **Android** it is not getting listened.\r\n\r\n**To Reproduce** :-\r\n**1**. these version of packages in **package.json**\r\n```\r\n\"react-native\": \"0.71.10\"\r\n\"laravel-echo\": \"^1.16.1\"\r\n\"socket.io-client\": \"^4.7.5\"\r\n```\r\n\r\n**2**. Add this in your useEffect\r\n ```\r\n import Socketio from 'socket.io-client';\r\n import Echo from 'laravel-echo/dist/echo';\r\n\r\nconst echo = new Echo({\r\n  broadcaster: 'socket.io',\r\n  host: SOCKET_URL,\r\n  client: Socketio,\r\n}); \r\n\r\necho.channel('channel_name')\r\n     .listen('.event', (data) => { console.log(\"🚀 ~ .listen ~ data:\", data)  });\r\n```\r\nIn **iOS** it works fine. In **Android**, there is no event log.\r\nWe tried many suggestions from the community, seems like none of them works for this scenario.\r\n\r\nThings we already tried :- \r\n1. Adding **'CORS'** on the server side\r\n2. tried using **android:usesCleartextTraffic=\"true\"**\r\n3. Also tried suggestions from the closed issue of the Repo\r\n4. Tried downgrading **'Socket.io-client'** package from **4.7.5** (latest as of 19/07/2024) to all the suggested ones in the community ",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5143/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5142",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5142/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5142/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5142/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5142",
    "id": 2418664164,
    "node_id": "I_kwDOAAiDnM6QKeLk",
    "number": 5142,
    "title": "express-session session and socket.io session cannot be synced.",
    "user": {
      "login": "hiroaki2020",
      "id": 68175994,
      "node_id": "MDQ6VXNlcjY4MTc1OTk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/68175994?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hiroaki2020",
      "html_url": "https://github.com/hiroaki2020",
      "followers_url": "https://api.github.com/users/hiroaki2020/followers",
      "following_url": "https://api.github.com/users/hiroaki2020/following{/other_user}",
      "gists_url": "https://api.github.com/users/hiroaki2020/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hiroaki2020/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hiroaki2020/subscriptions",
      "organizations_url": "https://api.github.com/users/hiroaki2020/orgs",
      "repos_url": "https://api.github.com/users/hiroaki2020/repos",
      "events_url": "https://api.github.com/users/hiroaki2020/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hiroaki2020/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2111669362,
        "node_id": "MDU6TGFiZWwyMTExNjY5MzYy",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/question",
        "name": "question",
        "color": "d876e3",
        "default": true,
        "description": "Further information is requested"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-07-19T11:24:03Z",
    "updated_at": "2024-07-22T01:42:02Z",
    "closed_at": "2024-07-22T01:42:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nI followed [this official guide](https://socket.io/how-to/use-with-express-session#sharing-the-session-context) and tried to sync express-session session and socket.io session. However, it seems socket.request.session is not the same as express-session's one. Express's req.session.id is constant and can be found in redis server but socket.io's socket.request.session.id is different and not constant. It changes as app connects to socket. Since session is not shared, socket.request.session does not include login Id which exists in express-session's session.\r\n\r\n**To Reproduce**\r\n\r\nPlease fill the following code example:\r\n\r\nSocket.IO server version: `4.7.5`\r\n\r\n*Server*\r\n\r\n```js\r\nimport express = require(\"express\");\r\nimport { createServer } from \"node:http\";\r\nimport { Server } from \"socket.io\";\r\nimport session from \"express-session\";\r\nimport { Redis } from \"ioredis\";\r\nimport RedisStore from \"connect-redis\";\r\n\r\ndeclare module \"express-session\" {\r\n  interface SessionData {\r\n    loginUserId: number;\r\n  }\r\n}\r\n\r\nconst port = process.env.PORT || 3000;\r\n\r\nconst app = express();\r\nconst httpServer = createServer(app);\r\n\r\n// redis settings\r\nconst redisConfig = {\r\n  port: 6379,\r\n  host: \"kvs\", // docker redis container host\r\n  password: \"password\",\r\n};\r\nconst redis = new Redis(redisConfig);\r\nconst redisStore = new RedisStore({ client: redis });\r\n\r\nconst sessionMiddleware = session({\r\n      name: \"session-sync-test\",\r\n      secret: \"secret\",\r\n      resave: false,\r\n      rolling: true,\r\n      saveUninitialized: false,\r\n      cookie: {\r\n        maxAge:  60 * 60 * 1000 * 24,\r\n        httpOnly: true,\r\n        sameSite: \"strict\",\r\n      },\r\n      store: redisStore\r\n    };);\r\n\r\napp.use(sessionMiddleware);\r\n\r\napp.use('/api', [\r\n  signUpRouter,\r\n  loginRouter\r\n]);\r\n\r\napp.use(authMiddleware);\r\n\r\nconst io = new Server(httpServer, {\r\n  path: \"/api/socket.io\",\r\n  cors: {\r\n     origin: \"http://localhost:8080\",\r\n     methods: [\"GET\", \"POST\"],\r\n     allowedHeaders: [\"Authorization\"],\r\n     credentials: true,\r\n  },\r\n});\r\n\r\nio.engine.use(sessionMiddleware);\r\n\r\nhttpServer.listen(port, () => {\r\n  console.log(`application is running at: http://localhost:${port}`);\r\n});\r\n\r\nio.on(\"connection\", (socket) => {\r\n    const req = socket.request as express.Request;\r\n  if (req.session) {\r\n    console.log(\r\n      'Logged in user ID:', \r\n      req.session.loginUserId, // undefined\r\n      'socket's req.session.id:',\r\n      req.session.id // 1st connection time: 'abcdefg', 2nd: 'hijklmn', so not constant and not the same as the express-session's one\r\n    );\r\n  } else {\r\n    console.log('No session found');\r\n  }\r\n});\r\n\r\napp.get(\"/\", (req, res) => {\r\n  console.log(\r\n      'Logged in user ID:', \r\n      req.session.loginUserId, // 1\r\n      'socket's req.session.id:',\r\n      req.session.id // 'vwxyzabc' which is constant.\r\n    );\r\n});\r\n```\r\n\r\nSocket.IO client version: `4.7.5`\r\n\r\n*Client*\r\n\r\n```js\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io(`http://localhost:3000/`, {\r\n  path: '/api/socket.io',\r\n  reconnectionAttempts: 5,\r\n  reconnectionDelay: 1000,\r\n  reconnectionDelayMax: 5 * 1000,\r\n});\r\n\r\nsocket.on(\"connect\", () => {\r\n  console.log(`connect ${socket.id}`);\r\n});\r\n\r\nsocket.on(\"disconnect\", () => {\r\n  console.log(\"disconnect\");\r\n});\r\n```\r\n\r\n**Expected behavior**\r\nexpress-session session and socket.io session are synced.\r\n\r\n**Platform:**\r\n - Device: [mac mini apple M1, 2020]\r\n - OS: [Sonoma 14.2.1]\r\n - browser: chrome(latest version)\r\n\r\n**Additional context**\r\nI provide additional info if necessary.\r\n",
    "closed_by": {
      "login": "hiroaki2020",
      "id": 68175994,
      "node_id": "MDQ6VXNlcjY4MTc1OTk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/68175994?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hiroaki2020",
      "html_url": "https://github.com/hiroaki2020",
      "followers_url": "https://api.github.com/users/hiroaki2020/followers",
      "following_url": "https://api.github.com/users/hiroaki2020/following{/other_user}",
      "gists_url": "https://api.github.com/users/hiroaki2020/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hiroaki2020/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hiroaki2020/subscriptions",
      "organizations_url": "https://api.github.com/users/hiroaki2020/orgs",
      "repos_url": "https://api.github.com/users/hiroaki2020/repos",
      "events_url": "https://api.github.com/users/hiroaki2020/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hiroaki2020/received_events",
      "type": "User",
      "site_admin": false
    },
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5142/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5141",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5141/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5141/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5141/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5141",
    "id": 2416408758,
    "node_id": "I_kwDOAAiDnM6QB3i2",
    "number": 5141,
    "title": "The footer link to roadmap is wrong",
    "user": {
      "login": "gelzinn",
      "id": 60621494,
      "node_id": "MDQ6VXNlcjYwNjIxNDk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/60621494?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gelzinn",
      "html_url": "https://github.com/gelzinn",
      "followers_url": "https://api.github.com/users/gelzinn/followers",
      "following_url": "https://api.github.com/users/gelzinn/following{/other_user}",
      "gists_url": "https://api.github.com/users/gelzinn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gelzinn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gelzinn/subscriptions",
      "organizations_url": "https://api.github.com/users/gelzinn/orgs",
      "repos_url": "https://api.github.com/users/gelzinn/repos",
      "events_url": "https://api.github.com/users/gelzinn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gelzinn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206558,
        "node_id": "MDU6TGFiZWwyMDY1NTg=",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/documentation",
        "name": "documentation",
        "color": "DDDDDD",
        "default": true,
        "description": "Improvements or additions to documentation"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-07-18T13:37:25Z",
    "updated_at": "2024-07-19T05:44:02Z",
    "closed_at": "2024-07-19T05:43:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\n\r\n![image](https://github.com/user-attachments/assets/4540d6d8-9a9b-49c2-bee9-286ff75a910b)\r\n\r\n**To Reproduce**\r\n\r\nOpen [socket.io](https://socket.io/) website and scroll to footer.\r\n\r\n**Image**\r\n\r\n![image](https://github.com/user-attachments/assets/ae8379b1-d995-4d1b-865e-57a3dba2de83)\r\n\r\n`https://github.com/socketio/socket.io/projects/3` -> `https://github.com/orgs/socketio/projects/3`",
    "closed_by": {
      "login": "darrachequesne",
      "id": 13031701,
      "node_id": "MDQ6VXNlcjEzMDMxNzAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13031701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darrachequesne",
      "html_url": "https://github.com/darrachequesne",
      "followers_url": "https://api.github.com/users/darrachequesne/followers",
      "following_url": "https://api.github.com/users/darrachequesne/following{/other_user}",
      "gists_url": "https://api.github.com/users/darrachequesne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darrachequesne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darrachequesne/subscriptions",
      "organizations_url": "https://api.github.com/users/darrachequesne/orgs",
      "repos_url": "https://api.github.com/users/darrachequesne/repos",
      "events_url": "https://api.github.com/users/darrachequesne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darrachequesne/received_events",
      "type": "User",
      "site_admin": false
    },
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5141/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5140",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5140/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5140/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5140/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5140",
    "id": 2416052279,
    "node_id": "I_kwDOAAiDnM6QAgg3",
    "number": 5140,
    "title": "Socket disconnects on big payload.",
    "user": {
      "login": "faisal-anwar825",
      "id": 95558240,
      "node_id": "U_kgDOBbIaYA",
      "avatar_url": "https://avatars.githubusercontent.com/u/95558240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/faisal-anwar825",
      "html_url": "https://github.com/faisal-anwar825",
      "followers_url": "https://api.github.com/users/faisal-anwar825/followers",
      "following_url": "https://api.github.com/users/faisal-anwar825/following{/other_user}",
      "gists_url": "https://api.github.com/users/faisal-anwar825/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/faisal-anwar825/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/faisal-anwar825/subscriptions",
      "organizations_url": "https://api.github.com/users/faisal-anwar825/orgs",
      "repos_url": "https://api.github.com/users/faisal-anwar825/repos",
      "events_url": "https://api.github.com/users/faisal-anwar825/events{/privacy}",
      "received_events_url": "https://api.github.com/users/faisal-anwar825/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2111669362,
        "node_id": "MDU6TGFiZWwyMTExNjY5MzYy",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/question",
        "name": "question",
        "color": "d876e3",
        "default": true,
        "description": "Further information is requested"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2024-07-18T10:53:11Z",
    "updated_at": "2024-07-22T12:30:57Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using socket.io to create a realtime chat which includes attachments as well. I am sending files in Base64 form. but the issue is that if file size is around 500 to 600 KB. it gets send successfully but when file size increases more than that the sockets disconnects as soon as i send the message, with the error \r\n\r\n> Transport close: The connection was closed\r\n\r\ni have tried increasing the maxHttpBufferSize to 1MB and 100MB but still files > 7, 800 KBs wont upload.\r\n\r\n\r\nSocket.IO server version: `4.7.2`\r\n\r\nThis is the code from my server\r\n\r\n`\r\n\r\n        import {\r\n          WebSocketGateway,\r\n          WebSocketServer,\r\n          SubscribeMessage,\r\n          OnGatewayConnection,\r\n          OnGatewayDisconnect,\r\n        } from '@nestjs/websockets';\r\n        import { Server, Socket } from 'socket.io';\r\n        import { SocketsService } from '../sockets.service';\r\n        import { WsGuard } from '@app/common';\r\n        import { ChatDto } from '../dto/chat.dto';\r\n        import { Injectable, UseGuards } from '@nestjs/common';\r\n        \r\n        @Injectable()\r\n        @WebSocketGateway({ cors: '*:*' })\r\n        export class ChatGateway implements OnGatewayConnection, OnGatewayDisconnect {\r\n          @WebSocketServer() public server: Server;\r\n          users = 0;\r\n        \r\n          constructor(\r\n            private readonly socketService: SocketsService,\r\n          ) { }\r\n        \r\n          async onModuleInit() {\r\n            // Call the configureWebSocketServer method when the module has been initialized\r\n            this.configureWebSocketServer();\r\n          }\r\n        \r\n          async handleConnection(client: Socket) {\r\n            // A client has connected\r\n            this.users++;\r\n        \r\n            client.removeAllListeners('disconnect');\r\n        \r\n            client.on('disconnect', () => this.handleDisconnect(client));\r\n            // Notify connected clients of current users\r\n            this.server.emit('users', this.users);\r\n          }\r\n        \r\n          afterInit(server: Server) {\r\n            this.socketService.socket = server;\r\n          }\r\n        \r\n          async handleDisconnect(client: Socket) {\r\n            // A client has disconnected\r\n            this.users--;\r\n            client.removeAllListeners('disconnect');\r\n        \r\n            client.on('disconnect', () => this.handleDisconnect(client));\r\n            // Notify connected clients of current users\r\n            this.server.emit('users', this.users);\r\n          }\r\n        \r\n          @SubscribeMessage('chat')\r\n          @UseGuards(WsGuard)\r\n          async onChat(client: Socket, payload: ChatDto) {\r\n            // expect to receive the file here\r\n          }\r\n        \r\n          async configureWebSocketServer() {\r\n        \r\n            this.server.engine.opts.maxHttpBufferSize = 4e8;\r\n          }\r\n        }\r\n\r\n`\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5140/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5139",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5139/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5139/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5139/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5139",
    "id": 2415981290,
    "node_id": "I_kwDOAAiDnM6QAPLq",
    "number": 5139,
    "title": "Emit to room not work with uWebsocketjs",
    "user": {
      "login": "SaltFish001",
      "id": 42058801,
      "node_id": "MDQ6VXNlcjQyMDU4ODAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/42058801?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SaltFish001",
      "html_url": "https://github.com/SaltFish001",
      "followers_url": "https://api.github.com/users/SaltFish001/followers",
      "following_url": "https://api.github.com/users/SaltFish001/following{/other_user}",
      "gists_url": "https://api.github.com/users/SaltFish001/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SaltFish001/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SaltFish001/subscriptions",
      "organizations_url": "https://api.github.com/users/SaltFish001/orgs",
      "repos_url": "https://api.github.com/users/SaltFish001/repos",
      "events_url": "https://api.github.com/users/SaltFish001/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SaltFish001/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 80315,
        "node_id": "MDU6TGFiZWw4MDMxNQ==",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/bug",
        "name": "bug",
        "color": "d73a4a",
        "default": true,
        "description": "Something isn't working"
      },
      {
        "id": 2833344293,
        "node_id": "MDU6TGFiZWwyODMzMzQ0Mjkz",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/needs%20investigation",
        "name": "needs investigation",
        "color": "B9DDCE",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2024-07-18T10:18:16Z",
    "updated_at": "2024-09-20T05:48:01Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nEmit some message to room not work with uWebsocketjs, but clients does`t got any message. \r\n**To Reproduce**\r\n\r\nPlease fill the following code example:\r\n\r\nSocket.IO server version: `x.y.z`\r\n\r\n*Server*\r\n\r\n```js\r\nimport { Server as socket_server } from 'socket.io';\r\nimport { App } from 'uWebSockets.js';\r\n\r\nconst uapp = App();\r\nconst socket_instance = new socket_server({\r\n  path: '/socket',\r\n});\r\nsocket_instance.attachApp(uapp);\r\nsocket_instance.use((scoket, next) => {\r\n  console.log('socket connect >>>', scoket.id);\r\n  scoket.join('test');\r\n  setTimeout(() => {\r\n    console.log('socket emit >>>', scoket.rooms);\r\n    socket_instance.to('test').emit('message', 'hello world');\r\n  }, 2000);\r\n  return next();\r\n});\r\n\r\nuapp.listen(9999, (token) => {\r\n  console.log(token);\r\n  console.log('server is listening on port 8888');\r\n});\r\n\r\n```\r\n\r\nSocket.IO client version: `x.y.z`\r\n\r\n*Client*\r\n\r\n```js\r\nimport { io } from 'socket.io-client';\r\nconst client = io('http://localhost:9999', {\r\n  path: '/socket',\r\n  transports: ['websocket'],\r\n});\r\n\r\nclient.onAny((...arg) => {\r\n  console.log('onany >>>', arg);\r\n});\r\nclient.connect();\r\n\r\n```\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Platform:**\r\n - Device: [e.g. Samsung S8]\r\n - OS: [e.g. Android 9.2]\r\n\r\n**Additional context**\r\nSocket.io & Socket.io-client 4.7.5\r\nuWebsocketjs 20.44.0\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5139/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5139/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5136",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5136/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5136/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5136/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5136",
    "id": 2410711858,
    "node_id": "I_kwDOAAiDnM6PsIsy",
    "number": 5136,
    "title": "Iterate over acknowledgements as they arrive",
    "user": {
      "login": "darrachequesne",
      "id": 13031701,
      "node_id": "MDQ6VXNlcjEzMDMxNzAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13031701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darrachequesne",
      "html_url": "https://github.com/darrachequesne",
      "followers_url": "https://api.github.com/users/darrachequesne/followers",
      "following_url": "https://api.github.com/users/darrachequesne/following{/other_user}",
      "gists_url": "https://api.github.com/users/darrachequesne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darrachequesne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darrachequesne/subscriptions",
      "organizations_url": "https://api.github.com/users/darrachequesne/orgs",
      "repos_url": "https://api.github.com/users/darrachequesne/repos",
      "events_url": "https://api.github.com/users/darrachequesne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darrachequesne/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 124367,
        "node_id": "MDU6TGFiZWwxMjQzNjc=",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/enhancement",
        "name": "enhancement",
        "color": "a2eeef",
        "default": true,
        "description": "New feature or request"
      },
      {
        "id": 7181893443,
        "node_id": "LA_kwDOAAiDnM8AAAABrBL_Qw",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/package:socket.io",
        "name": "package:socket.io",
        "color": "C9CE8F",
        "default": false,
        "description": "This concerns the \"socket.io\" package"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-07-16T09:50:14Z",
    "updated_at": "2024-07-16T09:50:14Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nWhen emitting with multiple acknowledgements, one has to wait for all responses (or the timeout).\r\n\r\n```js\r\nconst responses = await io.timeout(1000).emitWithAck(\"hello\");\r\n\r\n// then process all responses\r\n```\r\n\r\n**Describe the solution you'd like**\r\n\r\nIterate over the responses as they arrive, something like:\r\n\r\n```js\r\ntry {\r\n  for await (const ack of io.timeout(1000).emitWithAckIterator(\"hello\")) {\r\n    // process one single response\r\n  }\r\n} catch (e) {\r\n  // handle timeout\r\n}\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n\r\nN/A\r\n\r\n**Additional context**\r\n\r\nRelated: https://github.com/socketio/socket.io/discussions/5062\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5136/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5136/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5135",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5135/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5135/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5135/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5135",
    "id": 2408891591,
    "node_id": "I_kwDOAAiDnM6PlMTH",
    "number": 5135,
    "title": "Heartbeat detection is delayed when timers throttled, and messages can be sent over expired connection",
    "user": {
      "login": "tjenkinson",
      "id": 3259993,
      "node_id": "MDQ6VXNlcjMyNTk5OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3259993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjenkinson",
      "html_url": "https://github.com/tjenkinson",
      "followers_url": "https://api.github.com/users/tjenkinson/followers",
      "following_url": "https://api.github.com/users/tjenkinson/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjenkinson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjenkinson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjenkinson/subscriptions",
      "organizations_url": "https://api.github.com/users/tjenkinson/orgs",
      "repos_url": "https://api.github.com/users/tjenkinson/repos",
      "events_url": "https://api.github.com/users/tjenkinson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjenkinson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2833344293,
        "node_id": "MDU6TGFiZWwyODMzMzQ0Mjkz",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/needs%20investigation",
        "name": "needs investigation",
        "color": "B9DDCE",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/socketio/socket.io/milestones/54",
      "html_url": "https://github.com/socketio/socket.io/milestone/54",
      "labels_url": "https://api.github.com/repos/socketio/socket.io/milestones/54/labels",
      "id": 11597640,
      "node_id": "MI_kwDOAAiDnM4AsPdI",
      "number": 54,
      "title": "socket.io-client@next",
      "description": "",
      "creator": {
        "login": "darrachequesne",
        "id": 13031701,
        "node_id": "MDQ6VXNlcjEzMDMxNzAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/13031701?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darrachequesne",
        "html_url": "https://github.com/darrachequesne",
        "followers_url": "https://api.github.com/users/darrachequesne/followers",
        "following_url": "https://api.github.com/users/darrachequesne/following{/other_user}",
        "gists_url": "https://api.github.com/users/darrachequesne/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/darrachequesne/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/darrachequesne/subscriptions",
        "organizations_url": "https://api.github.com/users/darrachequesne/orgs",
        "repos_url": "https://api.github.com/users/darrachequesne/repos",
        "events_url": "https://api.github.com/users/darrachequesne/events{/privacy}",
        "received_events_url": "https://api.github.com/users/darrachequesne/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 10,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2024-09-18T05:58:27Z",
      "updated_at": "2024-09-20T09:19:28Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 7,
    "created_at": "2024-07-15T14:29:55Z",
    "updated_at": "2024-09-18T09:25:31Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "# Describe the bug\r\nDue to chrome (and maybe other browsers) throttling timers when the device sleeps, the [heartbeat detection logic](https://github.com/socketio/socket.io/blob/b7da542890c38c89b94d53c96c6408fd0d1f5672/packages/engine.io/lib/socket.ts#L229-L237) doesn't always run in time, causing messages to be lost before reconnection happens late.\r\n\r\n# To Reproduce\r\n\r\nSocket.IO server version: `4.7.5`\r\n\r\n## Server\r\n\r\n```js\r\nimport { Server } from \"socket.io\";\r\n\r\nconst io = new Server(3000, { pingTimeout: 5_000, pingInterval: 25_000});\r\n\r\nio.on(\"connection\", (socket) => {\r\n  console.log(`connect ${socket.id}`);\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    console.log(`disconnect ${socket.id}`);\r\n  });\r\n});\r\n```\r\n\r\nSocket.IO client version: `4.7.5`\r\n\r\n## Client\r\n\r\n```js\r\nimport { io } from \"socket.io-client\";\r\n\r\n// use a tunnel like the ports feature in vscode to make the connection work over the internet and use that host here\r\nconst socket = io(\"ws://<replace with host>:3000/\", {});\r\n\r\nsocket.on(\"connect\", () => {\r\n  console.log(`connect ${socket.id}`, new Date());\r\n});\r\n\r\nsocket.on(\"disconnect\", () => {\r\n  console.log(\"disconnect\", new Date());\r\n});\r\n```\r\n\r\n# Expected behavior\r\n\r\n- Load the page and wait for the connected message\r\n- Close the laptop with it unplugged so that it goes to sleep\r\n- Wait 60 seconds or so to make sure it's gone to sleep for a bit\r\n- Open the laptop and go back to the page\r\n- The latest connection should not have received a ping in the last 30 seconds, and therefore it should be closed. But because chrome froze the timer that's going to do the disconnection it will take a while longer before that actually happens\r\n- If a message is sent before the reconnection it will probably go into the void and be lost\r\n\r\n# Proposed fixes\r\n## Check if connection is expired before sending every message\r\n\r\nI opened a PR for this here: https://github.com/socketio/socket.io/pull/5134\r\n\r\nLet me know what you think\r\n\r\nThis doesn't cause the reconnect to happen immediately when the page is woken up, but it does mean attempting to send a message should trigger the reconnection, so outgoing messages shouldn't get lost.\r\n\r\n## Use `setInterval` and periodically check if a ping has not been received instead of `setTimeout`\r\n\r\nI think this and storing the `Date.now()` of the last ping should be more accurate, and cause the reconnection to happen almost immediately when the page is woken up. Can also do the same on a `visibilitychange` event when the page goes back to `visible`.\r\n\r\nCan look into a PR for this if you think it makes sense?\r\n\r\n\r\n# Platform:\r\n - Device: Mac\r\n - Browser: Chrome\r\n - OS: Mac OS 14.5 (23F79)\r\n\r\n# Additional context\r\nhttps://github.com/socketio/socket.io/issues/3507#issuecomment-977681297 is another fix in the past related to throttled timers\r\n\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5135/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5134",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5134/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5134/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5134/events",
    "html_url": "https://github.com/socketio/socket.io/pull/5134",
    "id": 2408743200,
    "node_id": "PR_kwDOAAiDnM51YyHW",
    "number": 5134,
    "title": "fix: Check if missed heartbeat synchronously before sending message",
    "user": {
      "login": "tjenkinson",
      "id": 3259993,
      "node_id": "MDQ6VXNlcjMyNTk5OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3259993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjenkinson",
      "html_url": "https://github.com/tjenkinson",
      "followers_url": "https://api.github.com/users/tjenkinson/followers",
      "following_url": "https://api.github.com/users/tjenkinson/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjenkinson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjenkinson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjenkinson/subscriptions",
      "organizations_url": "https://api.github.com/users/tjenkinson/orgs",
      "repos_url": "https://api.github.com/users/tjenkinson/repos",
      "events_url": "https://api.github.com/users/tjenkinson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjenkinson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2024-07-15T13:25:18Z",
    "updated_at": "2024-09-18T11:09:42Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/socketio/socket.io/pulls/5134",
      "html_url": "https://github.com/socketio/socket.io/pull/5134",
      "diff_url": "https://github.com/socketio/socket.io/pull/5134.diff",
      "patch_url": "https://github.com/socketio/socket.io/pull/5134.patch",
      "merged_at": null
    },
    "body": "Chrome (and maybe other browsers) will throttle `setTimeout` under certain conditions, causing them to slow down, and this breaks the heartbeat detection logic.\r\n\r\nThis fix means if a message is emitted when the connection should be considered expired (but the `setTimeout` hasn't fired yet), we close that socket and then buffer the message for the new connection. So now a message should never be sent over an expired connection.\r\n\r\nThis doesn't solve the problem of connections being detected as expired too late. I think that could be done separately.\r\n\r\n\r\n### The kind of change this PR does introduce\r\n\r\n* [x] a bug fix\r\n* [ ] a new feature\r\n* [ ] an update to the documentation\r\n* [ ] a code change that improves performance\r\n* [ ] other\r\n\r\n### Current behavior\r\nCheck the repro on https://github.com/socketio/socket.io/issues/5135\r\n\r\n### New behavior\r\n- When the next message is sent, the system will realise it's missed the heartbeat, create a new connection, and then the message will be sent over the new connection\r\n- So now a message will never be sent over a stale connection, and we're not depending on the heartbeat timeout to fire correctly when a page comes back to life (which doesn't happen when it's throttled)\r\n\r\n### Other information (e.g. related issues)\r\n\r\nThe reason that the heartbeat logic is not immediately closing the old connection when the page is woken up is due to chrome pausing the `setTimeout` that's used in the heartbeat logic. This PR doesn't fix that. I Think that could be handled separately.\r\n\r\nhttps://github.com/socketio/socket.io/issues/3507#issuecomment-977681297 is another fix related to throttled timers\r\n\r\nLet me know if you think this makes sense and I'm happy to look into adding a test for it",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5134/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5134/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/socketio/socket.io/issues/5131",
    "repository_url": "https://api.github.com/repos/socketio/socket.io",
    "labels_url": "https://api.github.com/repos/socketio/socket.io/issues/5131/labels{/name}",
    "comments_url": "https://api.github.com/repos/socketio/socket.io/issues/5131/comments",
    "events_url": "https://api.github.com/repos/socketio/socket.io/issues/5131/events",
    "html_url": "https://github.com/socketio/socket.io/issues/5131",
    "id": 2403508353,
    "node_id": "I_kwDOAAiDnM6PQqCB",
    "number": 5131,
    "title": "Inherited `ws` package bump for socket-io.client",
    "user": {
      "login": "benkeen",
      "id": 512116,
      "node_id": "MDQ6VXNlcjUxMjExNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512116?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benkeen",
      "html_url": "https://github.com/benkeen",
      "followers_url": "https://api.github.com/users/benkeen/followers",
      "following_url": "https://api.github.com/users/benkeen/following{/other_user}",
      "gists_url": "https://api.github.com/users/benkeen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benkeen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benkeen/subscriptions",
      "organizations_url": "https://api.github.com/users/benkeen/orgs",
      "repos_url": "https://api.github.com/users/benkeen/repos",
      "events_url": "https://api.github.com/users/benkeen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benkeen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2111669362,
        "node_id": "MDU6TGFiZWwyMTExNjY5MzYy",
        "url": "https://api.github.com/repos/socketio/socket.io/labels/question",
        "name": "question",
        "color": "d876e3",
        "default": true,
        "description": "Further information is requested"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-07-11T15:39:41Z",
    "updated_at": "2024-07-11T17:00:13Z",
    "closed_at": "2024-07-11T17:00:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I see `engine.io-client` has had its `ws` version bumped to 8.17.1 to patch a DoS vulnerability in that library. `socket-io.client` still references the older version of `engine.io-client`. Could we get that package bumped to the latest version? It's not picking up the new minor version due to using \"~\".\r\n\r\nThanks! ",
    "closed_by": {
      "login": "benkeen",
      "id": 512116,
      "node_id": "MDQ6VXNlcjUxMjExNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512116?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benkeen",
      "html_url": "https://github.com/benkeen",
      "followers_url": "https://api.github.com/users/benkeen/followers",
      "following_url": "https://api.github.com/users/benkeen/following{/other_user}",
      "gists_url": "https://api.github.com/users/benkeen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benkeen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benkeen/subscriptions",
      "organizations_url": "https://api.github.com/users/benkeen/orgs",
      "repos_url": "https://api.github.com/users/benkeen/repos",
      "events_url": "https://api.github.com/users/benkeen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benkeen/received_events",
      "type": "User",
      "site_admin": false
    },
    "reactions": {
      "url": "https://api.github.com/repos/socketio/socket.io/issues/5131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/socketio/socket.io/issues/5131/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]