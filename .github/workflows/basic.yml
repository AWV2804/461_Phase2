name: Basic Workflow Pipeline

# Trigger the workflow on push or pull request to any integration/ branch
on:
  push:
    branches:
      - 'integration/**'
  pull_request:
    branches:
      - 'integration/**'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      USER_NAME: ${{ secrets.USER_NAME }}
      PASSWORD: ${{ secrets.PASSWORD }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PORT: ${{ vars.PORT }}
      REACT_APP_BACKEND_PORT: ${{ vars.REACT_APP_BACKEND_PORT }}
      TEST_USERNAME_ADMIN: ${{ secrets.TEST_USERNAME_ADMIN }}
      # TEST_PASSWORD_ADMIN: ${{ vars.TEMP_PA }}
      TEST_USERNAME_NOTADMIN: ${{ secrets.TEST_USERNAME_NOTADMIN }}
      asdf: ${{ vars.TEMP_PA }}
      
    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js (use the version specified in your .nvmrc or package.json, if applicable)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.18.0'  # Change the version to whatever you are using

      - name: Uncover secret
        run: echo ${{ vars.TEMP_PA }}
    
        # Step 3: Run ./run install to install dependencies
      - name: Debug Secrets
        run: echo "TEST_PASSWORD_ADMIN=${{ secrets.TEST_PASSWORD }}"
        shell: bash

      - name: Install Dependencies
        run: ./run install
            
      # Step 4: Start the backend server
      - name: Start Backend Server
        run: npm run bstart &
      
      # Step 5: Wait for backend to be ready
      - name: Wait for Backend Server
        run: |
            echo "Waiting for backend to start..."
            sleep 60  # Adjust time if backend takes longer to start
            curl -f http://localhost:${{env.REACT_APP_BACKEND_PORT}}/api-docs || exit 1
        shell: bash   

      # Step 6: Run tests to execute the test suite
      - name: Run Test Suite
        run: ./run test

    #   # Step 7: Start the frontend server
    #   - name: Build Frontend
    #     run: npm run build
    
      # Step 8: Check if everything is successful
      - name: Workflow Success Check
        if: ${{ success() }}
        run: echo "Both backend and frontend started successfully. Workflow passed!"
